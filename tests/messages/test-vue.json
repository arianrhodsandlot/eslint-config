[
  {
    "ruleId": "biome-x/format",
    "severity": 1,
    "message": "Replace `<script>⏎import·{·GlIcon·}·from·'@gitlab/ui';` with `import·{·GlIcon·}·from·'@gitlab/ui'`",
    "line": 1,
    "column": 1,
    "nodeType": null,
    "messageId": "replace",
    "endLine": 2,
    "endColumn": 37,
    "fix": {
      "range": [
        0,
        45
      ],
      "text": "import { GlIcon } from '@gitlab/ui'"
    }
  },
  {
    "ruleId": "vue/block-lang",
    "severity": 2,
    "message": "The 'lang' attribute of '<script>' is missing.",
    "line": 1,
    "column": 1,
    "nodeType": "VStartTag",
    "messageId": "missing",
    "endLine": 1,
    "endColumn": 9
  },
  {
    "ruleId": "prettier/prettier",
    "severity": 2,
    "message": "Delete `;`",
    "line": 2,
    "column": 36,
    "nodeType": null,
    "messageId": "delete",
    "endLine": 2,
    "endColumn": 37,
    "fix": {
      "range": [
        44,
        45
      ],
      "text": ""
    }
  },
  {
    "ruleId": "biome-x/format",
    "severity": 1,
    "message": "Replace `·'~/locale';` with `'~/locale'`",
    "line": 3,
    "column": 21,
    "nodeType": null,
    "messageId": "replace",
    "endLine": 3,
    "endColumn": 33,
    "fix": {
      "range": [
        66,
        78
      ],
      "text": "'~/locale'"
    }
  },
  {
    "ruleId": "prettier/prettier",
    "severity": 2,
    "message": "Replace `·'~/locale';` with `'~/locale'`",
    "line": 3,
    "column": 21,
    "nodeType": null,
    "messageId": "replace",
    "endLine": 3,
    "endColumn": 33,
    "fix": {
      "range": [
        66,
        78
      ],
      "text": "'~/locale'"
    }
  },
  {
    "ruleId": "biome-x/format",
    "severity": 1,
    "message": "Delete `;`",
    "line": 4,
    "column": 50,
    "nodeType": null,
    "messageId": "delete",
    "endLine": 4,
    "endColumn": 51,
    "fix": {
      "range": [
        128,
        129
      ],
      "text": ""
    }
  },
  {
    "ruleId": "prettier/prettier",
    "severity": 2,
    "message": "Delete `;`",
    "line": 4,
    "column": 50,
    "nodeType": null,
    "messageId": "delete",
    "endLine": 4,
    "endColumn": 51,
    "fix": {
      "range": [
        128,
        129
      ],
      "text": ""
    }
  },
  {
    "ruleId": "vue/require-name-property",
    "severity": 2,
    "message": "Required name property is not set.",
    "line": 6,
    "column": 16,
    "nodeType": "ObjectExpression",
    "messageId": "missingName",
    "endLine": 38,
    "endColumn": 2,
    "suggestions": [
      {
        "messageId": "addName",
        "fix": {
          "range": [
            150,
            150
          ],
          "text": "name: 'test-vue',\n  "
        },
        "desc": "Add name property to component."
      }
    ]
  },
  {
    "ruleId": "vue/new-line-between-multi-line-property",
    "severity": 2,
    "message": "Enforce new lines between multi-line properties in Vue components.",
    "line": 9,
    "column": 4,
    "nodeType": "Property",
    "messageId": "missingEmptyLine",
    "endLine": 10,
    "endColumn": 3,
    "fix": {
      "range": [
        180,
        180
      ],
      "text": "\n"
    }
  },
  {
    "ruleId": "perfectionist/sort-objects",
    "severity": 2,
    "message": "Expected \"required\" to come before \"type\".",
    "line": 13,
    "column": 7,
    "nodeType": "Property",
    "messageId": "unexpectedObjectsOrder",
    "endLine": 13,
    "endColumn": 22,
    "fix": {
      "range": [
        217,
        279
      ],
      "text": "default: () => ({}),\n      required: false,\n      type: Object"
    }
  },
  {
    "ruleId": "perfectionist/sort-objects",
    "severity": 2,
    "message": "Expected \"default\" to come before \"required\".",
    "line": 14,
    "column": 7,
    "nodeType": "Property",
    "messageId": "unexpectedObjectsOrder",
    "endLine": 14,
    "endColumn": 26,
    "fix": {
      "range": [
        217,
        279
      ],
      "text": "default: () => ({}),\n      required: false,\n      type: Object"
    }
  },
  {
    "ruleId": "vue/new-line-between-multi-line-property",
    "severity": 2,
    "message": "Enforce new lines between multi-line properties in Vue components.",
    "line": 15,
    "column": 6,
    "nodeType": "Property",
    "messageId": "missingEmptyLine",
    "endLine": 16,
    "endColumn": 5,
    "fix": {
      "range": [
        287,
        287
      ],
      "text": "\n"
    }
  },
  {
    "ruleId": "perfectionist/sort-objects",
    "severity": 2,
    "message": "Expected \"groups\" to come before \"parentGroup\".",
    "line": 16,
    "column": 5,
    "nodeType": "Property",
    "messageId": "unexpectedObjectsOrder",
    "endLine": 19,
    "endColumn": 6,
    "fix": {
      "range": [
        196,
        431
      ],
      "text": "action: {\n      type: String,\n      required: false,\n      default: '',\n    },\n    groups: {\n      type: Array,\n      required: true,\n    },\n    parentGroup: {\n      type: Object,\n      required: false,\n      default: () => ({}),\n    }"
    }
  },
  {
    "ruleId": "perfectionist/sort-objects",
    "severity": 2,
    "message": "Expected \"required\" to come before \"type\".",
    "line": 18,
    "column": 7,
    "nodeType": "Property",
    "messageId": "unexpectedObjectsOrder",
    "endLine": 18,
    "endColumn": 21,
    "fix": {
      "range": [
        308,
        341
      ],
      "text": "required: true,\n      type: Array"
    }
  },
  {
    "ruleId": "vue/new-line-between-multi-line-property",
    "severity": 2,
    "message": "Enforce new lines between multi-line properties in Vue components.",
    "line": 19,
    "column": 6,
    "nodeType": "Property",
    "messageId": "missingEmptyLine",
    "endLine": 20,
    "endColumn": 5,
    "fix": {
      "range": [
        349,
        349
      ],
      "text": "\n"
    }
  },
  {
    "ruleId": "perfectionist/sort-objects",
    "severity": 2,
    "message": "Expected \"action\" to come before \"groups\".",
    "line": 20,
    "column": 5,
    "nodeType": "Property",
    "messageId": "unexpectedObjectsOrder",
    "endLine": 24,
    "endColumn": 6,
    "fix": {
      "range": [
        196,
        431
      ],
      "text": "action: {\n      type: String,\n      required: false,\n      default: '',\n    },\n    groups: {\n      type: Array,\n      required: true,\n    },\n    parentGroup: {\n      type: Object,\n      required: false,\n      default: () => ({}),\n    }"
    }
  },
  {
    "ruleId": "perfectionist/sort-objects",
    "severity": 2,
    "message": "Expected \"required\" to come before \"type\".",
    "line": 22,
    "column": 7,
    "nodeType": "Property",
    "messageId": "unexpectedObjectsOrder",
    "endLine": 22,
    "endColumn": 22,
    "fix": {
      "range": [
        370,
        424
      ],
      "text": "default: '',\n      required: false,\n      type: String"
    }
  },
  {
    "ruleId": "perfectionist/sort-objects",
    "severity": 2,
    "message": "Expected \"default\" to come before \"required\".",
    "line": 23,
    "column": 7,
    "nodeType": "Property",
    "messageId": "unexpectedObjectsOrder",
    "endLine": 23,
    "endColumn": 18,
    "fix": {
      "range": [
        370,
        424
      ],
      "text": "default: '',\n      required: false,\n      type: String"
    }
  },
  {
    "ruleId": "vue/new-line-between-multi-line-property",
    "severity": 2,
    "message": "Enforce new lines between multi-line properties in Vue components.",
    "line": 25,
    "column": 4,
    "nodeType": "Property",
    "messageId": "missingEmptyLine",
    "endLine": 26,
    "endColumn": 3,
    "fix": {
      "range": [
        437,
        437
      ],
      "text": "\n"
    }
  },
  {
    "ruleId": "perfectionist/sort-objects",
    "severity": 2,
    "message": "Expected \"computed\" to come before \"props\".",
    "line": 26,
    "column": 3,
    "nodeType": "Property",
    "messageId": "unexpectedObjectsOrder",
    "endLine": 37,
    "endColumn": 4,
    "fix": {
      "range": [
        183,
        737
      ],
      "text": "computed: {\n    hasMoreChildren() {\n      return this.parentGroup.childrenCount > MAX_CHILDREN_COUNT;\n    },\n    moreChildrenStats() {\n      return n__(\n        'One more item',\n        '%d more items',\n        this.parentGroup.childrenCount - this.parentGroup.children.length,\n      );\n    },\n  },\n  props: {\n    parentGroup: {\n      type: Object,\n      required: false,\n      default: () => ({}),\n    },\n    groups: {\n      type: Array,\n      required: true,\n    },\n    action: {\n      type: String,\n      required: false,\n      default: '',\n    },\n  }"
    }
  },
  {
    "ruleId": "vue/component-api-style",
    "severity": 2,
    "message": "Options API is not allowed in your project. `computed` option is part of the Options API. Use `<script setup>` or Composition API instead.",
    "line": 26,
    "column": 3,
    "nodeType": "Identifier",
    "messageId": "disallowComponentOption",
    "endLine": 26,
    "endColumn": 11
  },
  {
    "ruleId": "biome-x/format",
    "severity": 1,
    "message": "Delete `;`",
    "line": 28,
    "column": 65,
    "nodeType": null,
    "messageId": "delete",
    "endLine": 28,
    "endColumn": 66,
    "fix": {
      "range": [
        540,
        541
      ],
      "text": ""
    }
  },
  {
    "ruleId": "prettier/prettier",
    "severity": 2,
    "message": "Delete `;`",
    "line": 28,
    "column": 65,
    "nodeType": null,
    "messageId": "delete",
    "endLine": 28,
    "endColumn": 66,
    "fix": {
      "range": [
        540,
        541
      ],
      "text": ""
    }
  },
  {
    "ruleId": "vue/new-line-between-multi-line-property",
    "severity": 2,
    "message": "Enforce new lines between multi-line properties in Vue components.",
    "line": 29,
    "column": 6,
    "nodeType": "Property",
    "messageId": "missingEmptyLine",
    "endLine": 30,
    "endColumn": 5,
    "fix": {
      "range": [
        548,
        548
      ],
      "text": "\n"
    }
  },
  {
    "ruleId": "biome-x/format",
    "severity": 1,
    "message": "Replace `⏎········'One·more·item',⏎········'%d·more·items',⏎········this.parentGroup.childrenCount·-·this.parentGroup.children.length,⏎······);` with `'One·more·item',·'%d·more·items',·this.parentGroup.childrenCount·-·this.parentGroup.children.length)`",
    "line": 31,
    "column": 18,
    "nodeType": null,
    "messageId": "replace",
    "endLine": 35,
    "endColumn": 9,
    "fix": {
      "range": [
        592,
        726
      ],
      "text": "'One more item', '%d more items', this.parentGroup.childrenCount - this.parentGroup.children.length)"
    }
  },
  {
    "ruleId": "prettier/prettier",
    "severity": 2,
    "message": "Replace `⏎········'One·more·item',⏎········'%d·more·items',⏎········this.parentGroup.childrenCount·-·this.parentGroup.children.length,⏎······);` with `'One·more·item',·'%d·more·items',·this.parentGroup.childrenCount·-·this.parentGroup.children.length)`",
    "line": 31,
    "column": 18,
    "nodeType": null,
    "messageId": "replace",
    "endLine": 35,
    "endColumn": 9,
    "fix": {
      "range": [
        592,
        726
      ],
      "text": "'One more item', '%d more items', this.parentGroup.childrenCount - this.parentGroup.children.length)"
    }
  },
  {
    "ruleId": "biome-x/format",
    "severity": 1,
    "message": "Delete `;⏎</script>⏎⏎<template>⏎··<ul·class=\"groups-list·group-list-tree·gl-m-0·gl-flex·gl-flex-col\">⏎····<!--·eslint-disable-next-line·vue/no-undef-components·-->⏎····<group-item⏎·······v-for=\"(group,·index)·in·groups\"⏎······:key=\"index\"⏎······:group=\"group\"⏎······:parent-group=\"parentGroup\"⏎······:action=\"action\"⏎····/>⏎····<li·v-if=\"hasMoreChildren\"·class=\"group-row\">⏎······<a·:href=\"parentGroup.relativePath\"·class=\"group-row-contents·has-more-items·gl-py-3\">⏎········<gl-icon·name=\"external-link\"·/>·{{·moreChildrenStats·}}⏎······</a>⏎····</li>⏎··</ul>⏎</template>`",
    "line": 38,
    "column": 2,
    "nodeType": null,
    "messageId": "delete",
    "endLine": 57,
    "endColumn": 12,
    "fix": {
      "range": [
        740,
        1304
      ],
      "text": ""
    }
  },
  {
    "ruleId": "prettier/prettier",
    "severity": 2,
    "message": "Delete `;`",
    "line": 38,
    "column": 2,
    "nodeType": null,
    "messageId": "delete",
    "endLine": 38,
    "endColumn": 3,
    "fix": {
      "range": [
        740,
        741
      ],
      "text": ""
    }
  },
  {
    "ruleId": "vue/component-name-in-template-casing",
    "severity": 2,
    "message": "Component name \"group-item\" is not PascalCase.",
    "line": 44,
    "column": 5,
    "nodeType": "HTMLTagOpen",
    "messageId": "incorrectCase",
    "endLine": 44,
    "endColumn": 16,
    "fix": {
      "range": [
        900,
        911
      ],
      "text": "<GroupItem"
    }
  },
  {
    "ruleId": "prettier/prettier",
    "severity": 2,
    "message": "Delete `·`",
    "line": 45,
    "column": 1,
    "nodeType": null,
    "messageId": "delete",
    "endLine": 45,
    "endColumn": 2,
    "fix": {
      "range": [
        912,
        913
      ],
      "text": ""
    }
  },
  {
    "ruleId": "vue/attributes-order",
    "severity": 2,
    "message": "Attribute \":action\" should go before \":parent-group\".",
    "line": 49,
    "column": 7,
    "nodeType": "VAttribute",
    "messageId": "expectedOrder",
    "endLine": 49,
    "endColumn": 23,
    "fix": {
      "range": [
        998,
        1048
      ],
      "text": ":action=\"action\"\n      :parent-group=\"parentGroup\""
    }
  },
  {
    "ruleId": "vue/attributes-order",
    "severity": 2,
    "message": "Attribute \"class\" should go before \":href\".",
    "line": 52,
    "column": 43,
    "nodeType": "VAttribute",
    "messageId": "expectedOrder",
    "endLine": 52,
    "endColumn": 92,
    "fix": {
      "range": [
        1115,
        1197
      ],
      "text": "class=\"group-row-contents has-more-items gl-py-3\" :href=\"parentGroup.relativePath\""
    }
  },
  {
    "ruleId": "vue/component-name-in-template-casing",
    "severity": 2,
    "message": "Component name \"gl-icon\" is not PascalCase.",
    "line": 53,
    "column": 9,
    "nodeType": "HTMLTagOpen",
    "messageId": "incorrectCase",
    "endLine": 53,
    "endColumn": 17,
    "fix": {
      "range": [
        1207,
        1215
      ],
      "text": "<GlIcon"
    }
  },
  {
    "ruleId": "prettier/prettier",
    "severity": 2,
    "message": "Insert `⏎·······`",
    "line": 53,
    "column": 41,
    "nodeType": null,
    "messageId": "insert",
    "endLine": 53,
    "endColumn": 41,
    "fix": {
      "range": [
        1239,
        1239
      ],
      "text": "\n       "
    }
  }
]