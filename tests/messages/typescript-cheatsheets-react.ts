/* eslint-disable sonarjs/no-duplicate-string,max-lines */
export const typescriptCheatsheetsReactMessages = [
  {
    ruleId: '@typescript-eslint/consistent-type-definitions',
    severity: 2,
    message: 'Use an `interface` instead of a `type`.',
    line: 192,
    column: 6,
    nodeType: 'Identifier',
    messageId: 'interfaceOverType',
    endLine: 192,
    endColumn: 14,
    fix: { range: [11_583, 11_622], text: 'interface AppProps {\n  message: string;\n}' },
  },
  {
    ruleId: '@typescript-eslint/member-delimiter-style',
    severity: 2,
    message: 'Unexpected separator (;).',
    line: 193,
    column: 19,
    nodeType: 'Punctuator',
    messageId: 'unexpectedSemi',
    endLine: 193,
    endColumn: 19,
    fix: { range: [11_618, 11_619], text: '' },
  },
  {
    ruleId: 'func-style',
    severity: 2,
    message: 'Expected a function declaration.',
    line: 197,
    column: 7,
    nodeType: 'VariableDeclarator',
    messageId: 'declaration',
    endLine: 197,
    endColumn: 60,
  },
  {
    ruleId: 'func-style',
    severity: 2,
    message: 'Expected a function declaration.',
    line: 200,
    column: 7,
    nodeType: 'VariableDeclarator',
    messageId: 'declaration',
    endLine: 200,
    endColumn: 79,
  },
  {
    ruleId: 'func-style',
    severity: 2,
    message: 'Expected a function declaration.',
    line: 203,
    column: 7,
    nodeType: 'VariableDeclarator',
    messageId: 'declaration',
    endLine: 203,
    endColumn: 71,
  },
  {
    ruleId: 'func-style',
    severity: 2,
    message: 'Expected a function declaration.',
    line: 207,
    column: 7,
    nodeType: 'VariableDeclarator',
    messageId: 'declaration',
    endLine: 209,
    endColumn: 2,
  },
  {
    ruleId: '@typescript-eslint/no-unused-vars',
    severity: 2,
    message: "'App' is assigned a value but never used.",
    line: 207,
    column: 7,
    nodeType: 'Identifier',
    messageId: 'unusedVar',
    endLine: 207,
    endColumn: 56,
  },
  {
    ruleId: 'func-style',
    severity: 2,
    message: 'Expected a function declaration.',
    line: 221,
    column: 7,
    nodeType: 'VariableDeclarator',
    messageId: 'declaration',
    endLine: 223,
    endColumn: 2,
  },
  {
    ruleId: '@typescript-eslint/no-unused-vars',
    severity: 2,
    message: "'App' is assigned a value but never used.",
    line: 221,
    column: 7,
    nodeType: 'Identifier',
    messageId: 'unusedVar',
    endLine: 221,
    endColumn: 56,
  },
  {
    ruleId: 'func-style',
    severity: 2,
    message: 'Expected a function declaration.',
    line: 240,
    column: 7,
    nodeType: 'VariableDeclarator',
    messageId: 'declaration',
    endLine: 243,
    endColumn: 42,
  },
  {
    ruleId: '@typescript-eslint/no-unused-vars',
    severity: 2,
    message: "'Title' is assigned a value but never used.",
    line: 240,
    column: 7,
    nodeType: 'Identifier',
    messageId: 'unusedVar',
    endLine: 240,
    endColumn: 56,
  },
  {
    ruleId: null,
    fatal: true,
    severity: 2,
    message: "Parsing error: ')' expected.",
    line: 264,
    column: 12,
    nodeType: null,
  },
  {
    ruleId: '@typescript-eslint/no-unused-vars',
    severity: 2,
    message: "'state' is assigned a value but never used.",
    line: 304,
    column: 8,
    nodeType: 'Identifier',
    messageId: 'unusedVar',
    endLine: 304,
    endColumn: 13,
  },
  {
    ruleId: '@typescript-eslint/no-unused-vars',
    severity: 2,
    message: "'setState' is assigned a value but never used.",
    line: 304,
    column: 15,
    nodeType: 'Identifier',
    messageId: 'unusedVar',
    endLine: 304,
    endColumn: 23,
  },
  {
    ruleId: '@typescript-eslint/no-unused-vars',
    severity: 2,
    message: "'user' is assigned a value but never used.",
    line: 314,
    column: 8,
    nodeType: 'Identifier',
    messageId: 'unusedVar',
    endLine: 314,
    endColumn: 12,
  },
  {
    ruleId: '@typescript-eslint/no-unused-vars',
    severity: 2,
    message: "'user' is assigned a value but never used.",
    line: 323,
    column: 8,
    nodeType: 'Identifier',
    messageId: 'unusedVar',
    endLine: 323,
    endColumn: 12,
  },
  {
    ruleId: '@typescript-eslint/consistent-type-assertions',
    severity: 2,
    message: 'Always prefer const x: T = { ... }.',
    line: 323,
    column: 40,
    nodeType: 'TSAsExpression',
    messageId: 'unexpectedObjectTypeAssertion',
    endLine: 323,
    endColumn: 50,
    suggestions: [
      {
        messageId: 'replaceObjectTypeAssertionWithSatisfies',
        data: { cast: 'User' },
        fix: { range: [39, 49], text: '{} satisfies User' },
        desc: 'Use const x = { ... } satisfies User instead.',
      },
    ],
  },
  {
    ruleId: null,
    fatal: true,
    severity: 2,
    message: 'Parsing error: Expression expected.',
    line: 341,
    column: 6,
    nodeType: null,
  },
  {
    ruleId: '@typescript-eslint/no-unused-vars',
    severity: 2,
    message: "'useCallback' is defined but never used.",
    line: 353,
    column: 10,
    nodeType: 'Identifier',
    messageId: 'unusedVar',
    endLine: 353,
    endColumn: 21,
  },
  {
    ruleId: '@typescript-eslint/no-unused-vars',
    severity: 2,
    message: "'useCallback' is defined but never used.",
    line: 362,
    column: 10,
    nodeType: 'Identifier',
    messageId: 'unusedVar',
    endLine: 362,
    endColumn: 21,
  },
  {
    ruleId: '@typescript-eslint/ban-types',
    severity: 2,
    message:
      "Don't use `Function` as a type. The `Function` type accepts any function-like value.\nIt provides no type safety when calling the function, which can be a common source of bugs.\nIt also accepts things like class declarations, which will throw at runtime as they will not be called with `new`.\nIf you are expecting the function to accept certain arguments, you should explicitly define the function shape.",
    line: 362,
    column: 32,
    nodeType: 'Identifier',
    messageId: 'bannedTypeMessage',
    endLine: 362,
    endColumn: 40,
  },
  {
    ruleId: '@typescript-eslint/no-empty-function',
    severity: 2,
    message: 'Unexpected empty arrow function.',
    line: 369,
    column: 20,
    nodeType: 'ArrowFunctionExpression',
    messageId: 'unexpected',
    endLine: 369,
    endColumn: 22,
  },
  {
    ruleId: '@typescript-eslint/no-empty-function',
    severity: 2,
    message: 'Unexpected empty arrow function.',
    line: 371,
    column: 25,
    nodeType: 'ArrowFunctionExpression',
    messageId: 'unexpected',
    endLine: 371,
    endColumn: 27,
  },
  {
    ruleId: 'import/no-unresolved',
    severity: 2,
    message: "Unable to resolve path to module 'react'.",
    line: 379,
    column: 28,
    nodeType: 'Literal',
    endLine: 379,
    endColumn: 35,
  },
  {
    ruleId: 'quotes',
    severity: 2,
    message: 'Strings must use singlequote.',
    line: 379,
    column: 28,
    nodeType: 'Literal',
    messageId: 'wrongQuotes',
    endLine: 379,
    endColumn: 35,
    fix: { range: [18_794, 18_801], text: "'react'" },
  },
  {
    ruleId: 'quotes',
    severity: 2,
    message: 'Strings must use singlequote.',
    line: 384,
    column: 13,
    nodeType: 'Literal',
    messageId: 'wrongQuotes',
    endLine: 384,
    endColumn: 24,
    fix: { range: [18_870, 18_881], text: "'increment'" },
  },
  {
    ruleId: 'quotes',
    severity: 2,
    message: 'Strings must use singlequote.',
    line: 385,
    column: 13,
    nodeType: 'Literal',
    messageId: 'wrongQuotes',
    endLine: 385,
    endColumn: 24,
    fix: { range: [18_913, 18_924], text: "'decrement'" },
  },
  {
    ruleId: 'quotes',
    severity: 2,
    message: 'Strings must use singlequote.',
    line: 389,
    column: 10,
    nodeType: 'Literal',
    messageId: 'wrongQuotes',
    endLine: 389,
    endColumn: 21,
    fix: { range: [19_047, 19_058], text: "'increment'" },
  },
  {
    ruleId: 'quotes',
    severity: 2,
    message: 'Strings must use singlequote.',
    line: 391,
    column: 10,
    nodeType: 'Literal',
    messageId: 'wrongQuotes',
    endLine: 391,
    endColumn: 21,
    fix: { range: [19_123, 19_134], text: "'decrement'" },
  },
  {
    ruleId: 'unicorn/error-message',
    severity: 2,
    message: 'Pass a message to the `Error` constructor.',
    line: 394,
    column: 13,
    nodeType: 'NewExpression',
    messageId: 'missing-message',
    endLine: 394,
    endColumn: 24,
  },
  {
    ruleId: '@typescript-eslint/no-unused-vars',
    severity: 2,
    message: "'Counter' is defined but never used.",
    line: 398,
    column: 10,
    nodeType: 'Identifier',
    messageId: 'unusedVar',
    endLine: 398,
    endColumn: 17,
  },
  {
    ruleId: 'quotes',
    severity: 2,
    message: 'Strings must use singlequote.',
    line: 403,
    column: 47,
    nodeType: 'Literal',
    messageId: 'wrongQuotes',
    endLine: 403,
    endColumn: 58,
    fix: { range: [19_418, 19_429], text: "'decrement'" },
  },
  {
    ruleId: 'quotes',
    severity: 2,
    message: 'Strings must use singlequote.',
    line: 403,
    column: 69,
    nodeType: 'Literal',
    messageId: 'wrongQuotes',
    endLine: 403,
    endColumn: 72,
    fix: { range: [19_440, 19_443], text: "'5'" },
  },
  {
    ruleId: 'quotes',
    severity: 2,
    message: 'Strings must use singlequote.',
    line: 406,
    column: 47,
    nodeType: 'Literal',
    messageId: 'wrongQuotes',
    endLine: 406,
    endColumn: 58,
    fix: { range: [19_521, 19_532], text: "'increment'" },
  },
  {
    ruleId: null,
    fatal: true,
    severity: 2,
    message: "Parsing error: '(' expected.",
    line: 427,
    column: 23,
    nodeType: null,
  },
  {
    ruleId: '@typescript-eslint/no-unused-vars',
    severity: 2,
    message: "'DelayedEffect' is defined but never used.",
    line: 437,
    column: 10,
    nodeType: 'Identifier',
    messageId: 'unusedVar',
    endLine: 437,
    endColumn: 23,
  },
  {
    ruleId: '@typescript-eslint/no-unused-vars',
    severity: 2,
    message: "'DelayedEffect' is defined but never used.",
    line: 457,
    column: 10,
    nodeType: 'Identifier',
    messageId: 'unusedVar',
    endLine: 457,
    endColumn: 23,
  },
  {
    ruleId: '@typescript-eslint/no-unused-vars',
    severity: 2,
    message: "'Foo' is defined but never used.",
    line: 481,
    column: 10,
    nodeType: 'Identifier',
    messageId: 'unusedVar',
    endLine: 481,
    endColumn: 13,
  },
  {
    ruleId: 'curly',
    severity: 2,
    message: "Expected { after 'if' condition.",
    line: 490,
    column: 26,
    nodeType: 'IfStatement',
    messageId: 'missingCurlyAfterCondition',
    endLine: 490,
    endColumn: 64,
    fix: { range: [23_291, 23_329], text: '{throw Error("divRef is not assigned");}' },
  },
  {
    ruleId: 'unicorn/throw-new-error',
    severity: 2,
    message: 'Use `new` when throwing an error.',
    line: 490,
    column: 32,
    nodeType: 'CallExpression',
    messageId: 'throw-new-error',
    endLine: 490,
    endColumn: 63,
    fix: { range: [23_297, 23_297], text: 'new ' },
  },
  {
    ruleId: 'unicorn/new-for-builtins',
    severity: 2,
    message: 'Use `new Error()` instead of `Error()`.',
    line: 490,
    column: 32,
    nodeType: 'CallExpression',
    messageId: 'enforce',
    endLine: 490,
    endColumn: 63,
    fix: { range: [23_297, 23_297], text: 'new ' },
  },
  {
    ruleId: 'quotes',
    severity: 2,
    message: 'Strings must use singlequote.',
    line: 490,
    column: 38,
    nodeType: 'Literal',
    messageId: 'wrongQuotes',
    endLine: 490,
    endColumn: 62,
    fix: { range: [23_303, 23_327], text: "'divRef is not assigned'" },
  },
  {
    ruleId: null,
    fatal: true,
    severity: 2,
    message: 'Parsing error: Expression expected.',
    line: 531,
    column: 41,
    nodeType: null,
  },
  {
    ruleId: '@typescript-eslint/consistent-type-definitions',
    severity: 2,
    message: 'Use an `interface` instead of a `type`.',
    line: 553,
    column: 13,
    nodeType: 'Identifier',
    messageId: 'interfaceOverType',
    endLine: 553,
    endColumn: 28,
    fix: { range: [27_580, 27_628], text: 'interface CountdownHandle {\n  start: () => void;\n}' },
  },
  {
    ruleId: '@typescript-eslint/member-delimiter-style',
    severity: 2,
    message: 'Unexpected separator (;).',
    line: 554,
    column: 21,
    nodeType: 'Punctuator',
    messageId: 'unexpectedSemi',
    endLine: 554,
    endColumn: 21,
    fix: { range: [27_624, 27_625], text: '' },
  },
  {
    ruleId: '@typescript-eslint/consistent-type-definitions',
    severity: 2,
    message: 'Use an `interface` instead of a `type`.',
    line: 557,
    column: 6,
    nodeType: 'Identifier',
    messageId: 'interfaceOverType',
    endLine: 557,
    endColumn: 20,
    fix: { range: [27_630, 27_655], text: 'interface CountdownProps {}' },
  },
  {
    ruleId: '@typescript-eslint/ban-types',
    severity: 2,
    message:
      'Don\'t use `{}` as a type. `{}` actually means "any non-nullish value".\n- If you want a type meaning "any object", you probably want `Record<string, unknown>` instead.\n- If you want a type meaning "any value", you probably want `unknown` instead.',
    line: 557,
    column: 23,
    nodeType: 'TSTypeLiteral',
    messageId: 'bannedTypeMessage',
    endLine: 557,
    endColumn: 25,
  },
  {
    ruleId: '@typescript-eslint/no-unused-vars',
    severity: 2,
    message: "'Countdown' is assigned a value but never used.",
    line: 559,
    column: 7,
    nodeType: 'Identifier',
    messageId: 'unusedVar',
    endLine: 559,
    endColumn: 16,
  },
  {
    ruleId: 'quotes',
    severity: 2,
    message: 'Strings must use singlequote.',
    line: 563,
    column: 13,
    nodeType: 'Literal',
    messageId: 'wrongQuotes',
    endLine: 563,
    endColumn: 20,
    fix: { range: [27_838, 27_845], text: "'Start'" },
  },
  {
    ruleId: '@typescript-eslint/consistent-type-imports',
    severity: 2,
    message: 'Import "CountdownHandle" is only used as types.',
    line: 574,
    column: 1,
    nodeType: 'ImportDeclaration',
    messageId: 'aImportIsOnlyTypes',
    endLine: 574,
    endColumn: 62,
    fix: { range: [27_957, 27_994], text: 'import type { CountdownHandle } from "./Countdown.tsx";\nimport Countdown' },
  },
  {
    ruleId: 'import/no-unresolved',
    severity: 2,
    message: "Unable to resolve path to module './Countdown.tsx'.",
    line: 574,
    column: 44,
    nodeType: 'Literal',
    endLine: 574,
    endColumn: 61,
  },
  {
    ruleId: 'quotes',
    severity: 2,
    message: 'Strings must use singlequote.',
    line: 574,
    column: 44,
    nodeType: 'Literal',
    messageId: 'wrongQuotes',
    endLine: 574,
    endColumn: 61,
    fix: { range: [28_000, 28_017], text: "'./Countdown.tsx'" },
  },
  {
    ruleId: '@typescript-eslint/no-unused-vars',
    severity: 2,
    message: "'App' is defined but never used.",
    line: 576,
    column: 10,
    nodeType: 'Identifier',
    messageId: 'unusedVar',
    endLine: 576,
    endColumn: 13,
  },
  {
    ruleId: 'import/no-unresolved',
    severity: 2,
    message: "Unable to resolve path to module 'react'.",
    line: 599,
    column: 26,
    nodeType: 'Literal',
    endLine: 599,
    endColumn: 33,
  },
  {
    ruleId: 'quotes',
    severity: 2,
    message: 'Strings must use singlequote.',
    line: 599,
    column: 26,
    nodeType: 'Literal',
    messageId: 'wrongQuotes',
    endLine: 599,
    endColumn: 33,
    fix: { range: [28_769, 28_776], text: "'react'" },
  },
  {
    ruleId: 'func-style',
    severity: 2,
    message: 'Expected a function declaration.',
    line: 603,
    column: 9,
    nodeType: 'VariableDeclarator',
    messageId: 'declaration',
    endLine: 606,
    endColumn: 4,
  },
  {
    ruleId: 'promise/prefer-await-to-then',
    severity: 2,
    message: 'Prefer await to then()/catch()/finally().',
    line: 605,
    column: 21,
    nodeType: 'Identifier',
    endLine: 605,
    endColumn: 28,
  },
  {
    ruleId: 'import/no-unresolved',
    severity: 2,
    message: "Unable to resolve path to module 'react'.",
    line: 621,
    column: 26,
    nodeType: 'Literal',
    endLine: 621,
    endColumn: 33,
  },
  {
    ruleId: 'quotes',
    severity: 2,
    message: 'Strings must use singlequote.',
    line: 621,
    column: 26,
    nodeType: 'Literal',
    messageId: 'wrongQuotes',
    endLine: 621,
    endColumn: 33,
    fix: { range: [29_898, 29_905], text: "'react'" },
  },
  {
    ruleId: 'func-style',
    severity: 2,
    message: 'Expected a function declaration.',
    line: 625,
    column: 9,
    nodeType: 'VariableDeclarator',
    messageId: 'declaration',
    endLine: 628,
    endColumn: 4,
  },
  {
    ruleId: 'promise/prefer-await-to-then',
    severity: 2,
    message: 'Prefer await to then()/catch()/finally().',
    line: 627,
    column: 21,
    nodeType: 'Identifier',
    endLine: 627,
    endColumn: 28,
  },
  {
    ruleId: '@typescript-eslint/no-unused-vars',
    severity: 2,
    message: "'useArray' is defined but never used.",
    line: 643,
    column: 10,
    nodeType: 'Identifier',
    messageId: 'unusedVar',
    endLine: 643,
    endColumn: 18,
  },
  {
    ruleId: '@typescript-eslint/no-empty-function',
    severity: 2,
    message: 'Unexpected empty arrow function.',
    line: 645,
    column: 38,
    nodeType: 'ArrowFunctionExpression',
    messageId: 'unexpected',
    endLine: 645,
    endColumn: 40,
  },
  {
    ruleId: '@typescript-eslint/no-unused-vars',
    severity: 2,
    message: "'useTuple' is defined but never used.",
    line: 649,
    column: 10,
    nodeType: 'Identifier',
    messageId: 'unusedVar',
    endLine: 649,
    endColumn: 18,
  },
  {
    ruleId: '@typescript-eslint/no-empty-function',
    severity: 2,
    message: 'Unexpected empty arrow function.',
    line: 651,
    column: 38,
    nodeType: 'ArrowFunctionExpression',
    messageId: 'unexpected',
    endLine: 651,
    endColumn: 40,
  },
  {
    ruleId: '@typescript-eslint/consistent-type-definitions',
    severity: 2,
    message: 'Use an `interface` instead of a `type`.',
    line: 684,
    column: 6,
    nodeType: 'Identifier',
    messageId: 'interfaceOverType',
    endLine: 684,
    endColumn: 13,
    fix: {
      range: [31_755, 31_827],
      text: 'interface MyProps {\n  // using `interface` is also ok\n  message: string;\n}',
    },
  },
  {
    ruleId: '@typescript-eslint/member-delimiter-style',
    severity: 2,
    message: 'Unexpected separator (;).',
    line: 686,
    column: 19,
    nodeType: 'Punctuator',
    messageId: 'unexpectedSemi',
    endLine: 686,
    endColumn: 19,
    fix: { range: [31_823, 31_824], text: '' },
  },
  {
    ruleId: '@typescript-eslint/consistent-type-definitions',
    severity: 2,
    message: 'Use an `interface` instead of a `type`.',
    line: 688,
    column: 6,
    nodeType: 'Identifier',
    messageId: 'interfaceOverType',
    endLine: 688,
    endColumn: 13,
    fix: { range: [31_828, 31_877], text: 'interface MyState {\n  count: number; // like this\n}' },
  },
  {
    ruleId: '@typescript-eslint/member-delimiter-style',
    severity: 2,
    message: 'Unexpected separator (;).',
    line: 689,
    column: 17,
    nodeType: 'Punctuator',
    messageId: 'unexpectedSemi',
    endLine: 689,
    endColumn: 17,
    fix: { range: [31_860, 31_861], text: '' },
  },
  {
    ruleId: '@typescript-eslint/no-unused-vars',
    severity: 2,
    message: "'App' is defined but never used.",
    line: 691,
    column: 7,
    nodeType: 'Identifier',
    messageId: 'unusedVar',
    endLine: 691,
    endColumn: 10,
  },
  {
    ruleId: '@typescript-eslint/lines-between-class-members',
    severity: 2,
    message: 'Expected blank line between class members.',
    line: 696,
    column: 3,
    nodeType: 'MethodDefinition',
    messageId: 'always',
    endLine: 702,
    endColumn: 4,
    fix: { range: [32_031, 32_031], text: '\n' },
  },
  {
    ruleId: '@typescript-eslint/consistent-type-definitions',
    severity: 2,
    message: 'Use an `interface` instead of a `type`.',
    line: 727,
    column: 6,
    nodeType: 'Identifier',
    messageId: 'interfaceOverType',
    endLine: 727,
    endColumn: 13,
    fix: { range: [33_610, 33_657], text: 'interface MyProps {\n  readonly message: string;\n}' },
  },
  {
    ruleId: '@typescript-eslint/no-unused-vars',
    severity: 2,
    message: "'MyProps' is defined but never used.",
    line: 727,
    column: 6,
    nodeType: 'Identifier',
    messageId: 'unusedVar',
    endLine: 727,
    endColumn: 13,
  },
  {
    ruleId: '@typescript-eslint/member-delimiter-style',
    severity: 2,
    message: 'Unexpected separator (;).',
    line: 728,
    column: 28,
    nodeType: 'Punctuator',
    messageId: 'unexpectedSemi',
    endLine: 728,
    endColumn: 28,
    fix: { range: [33_653, 33_654], text: '' },
  },
  {
    ruleId: '@typescript-eslint/consistent-type-definitions',
    severity: 2,
    message: 'Use an `interface` instead of a `type`.',
    line: 730,
    column: 6,
    nodeType: 'Identifier',
    messageId: 'interfaceOverType',
    endLine: 730,
    endColumn: 13,
    fix: { range: [33_658, 33_703], text: 'interface MyState {\n  readonly count: number;\n}' },
  },
  {
    ruleId: '@typescript-eslint/no-unused-vars',
    severity: 2,
    message: "'MyState' is defined but never used.",
    line: 730,
    column: 6,
    nodeType: 'Identifier',
    messageId: 'unusedVar',
    endLine: 730,
    endColumn: 13,
  },
  {
    ruleId: '@typescript-eslint/member-delimiter-style',
    severity: 2,
    message: 'Unexpected separator (;).',
    line: 731,
    column: 26,
    nodeType: 'Punctuator',
    messageId: 'unexpectedSemi',
    endLine: 731,
    endColumn: 26,
    fix: { range: [33_699, 33_700], text: '' },
  },
  {
    ruleId: '@typescript-eslint/no-unused-vars',
    severity: 2,
    message: "'App' is defined but never used.",
    line: 742,
    column: 7,
    nodeType: 'Identifier',
    messageId: 'unusedVar',
    endLine: 742,
    endColumn: 10,
  },
  {
    ruleId: '@typescript-eslint/lines-between-class-members',
    severity: 2,
    message: 'Expected blank line between class members.',
    line: 751,
    column: 3,
    nodeType: 'PropertyDefinition',
    messageId: 'always',
    endLine: 756,
    endColumn: 5,
    fix: { range: [34_256, 34_256], text: '\n' },
  },
  {
    ruleId: '@typescript-eslint/no-unused-vars',
    severity: 2,
    message: "'App' is defined but never used.",
    line: 765,
    column: 7,
    nodeType: 'Identifier',
    messageId: 'unusedVar',
    endLine: 765,
    endColumn: 10,
  },
  {
    ruleId: '@typescript-eslint/member-delimiter-style',
    severity: 2,
    message: 'Unexpected separator (;).',
    line: 766,
    column: 19,
    nodeType: 'Punctuator',
    messageId: 'unexpectedSemi',
    endLine: 766,
    endColumn: 19,
    fix: { range: [35_055, 35_056], text: '' },
  },
  {
    ruleId: '@typescript-eslint/lines-between-class-members',
    severity: 2,
    message: 'Expected blank line between class members.',
    line: 772,
    column: 3,
    nodeType: 'MethodDefinition',
    messageId: 'always',
    endLine: 778,
    endColumn: 4,
    fix: { range: [35_143, 35_143], text: '\n' },
  },
  {
    ruleId: '@typescript-eslint/no-unused-vars',
    severity: 2,
    message: "'Comp' is defined but never used.",
    line: 795,
    column: 7,
    nodeType: 'Identifier',
    messageId: 'unusedVar',
    endLine: 795,
    endColumn: 11,
  },
  {
    ruleId: '@typescript-eslint/no-unused-vars',
    severity: 2,
    message: "'Comp' is defined but never used.",
    line: 808,
    column: 7,
    nodeType: 'Identifier',
    messageId: 'unusedVar',
    endLine: 808,
    endColumn: 11,
  },
  {
    ruleId: 'quotes',
    severity: 2,
    message: 'Strings must use singlequote.',
    line: 810,
    column: 26,
    nodeType: 'Literal',
    messageId: 'wrongQuotes',
    endLine: 810,
    endColumn: 52,
    fix: { range: [36_692, 36_718], text: "'getDerivedStateFromProps'" },
  },
  {
    ruleId: '@typescript-eslint/no-empty-function',
    severity: 2,
    message: "Unexpected empty static method 'getDerivedStateFromProps'.",
    line: 812,
    column: 49,
    nodeType: 'FunctionExpression',
    messageId: 'unexpected',
    endLine: 812,
    endColumn: 51,
  },
  {
    ruleId: '@typescript-eslint/member-delimiter-style',
    severity: 2,
    message: 'Unexpected separator (;).',
    line: 821,
    column: 22,
    nodeType: 'Punctuator',
    messageId: 'unexpectedSemi',
    endLine: 821,
    endColumn: 22,
    fix: { range: [36_924, 36_925], text: '' },
  },
  {
    ruleId: '@typescript-eslint/member-delimiter-style',
    severity: 2,
    message: 'Unexpected separator (;).',
    line: 824,
    column: 27,
    nodeType: 'Punctuator',
    messageId: 'unexpectedSemi',
    endLine: 824,
    endColumn: 27,
    fix: { range: [36_978, 36_979], text: '' },
  },
  {
    ruleId: '@typescript-eslint/no-unused-vars',
    severity: 2,
    message: "'Comp' is defined but never used.",
    line: 833,
    column: 7,
    nodeType: 'Identifier',
    messageId: 'unusedVar',
    endLine: 833,
    endColumn: 11,
  },
  {
    ruleId: 'quotes',
    severity: 2,
    message: 'Strings must use singlequote.',
    line: 837,
    column: 24,
    nodeType: 'Literal',
    messageId: 'wrongQuotes',
    endLine: 837,
    endColumn: 29,
    fix: { range: [37_346, 37_351], text: "'123'" },
  },
  {
    ruleId: '@typescript-eslint/lines-between-class-members',
    severity: 2,
    message: 'Expected blank line between class members.',
    line: 841,
    column: 3,
    nodeType: 'MethodDefinition',
    messageId: 'always',
    endLine: 844,
    endColumn: 4,
    fix: { range: [37_402, 37_402], text: '\n' },
  },
  {
    ruleId: 'curly',
    severity: 2,
    message: "Expected { after 'if' condition.",
    line: 842,
    column: 49,
    nodeType: 'IfStatement',
    messageId: 'missingCurlyAfterCondition',
    endLine: 842,
    endColumn: 61,
    fix: { range: [37_515, 37_527], text: '{return null;}' },
  },
  {
    ruleId: null,
    fatal: true,
    severity: 2,
    message: 'Parsing error: Expression expected.',
    line: 868,
    column: 43,
    nodeType: null,
  },
  {
    ruleId: '@typescript-eslint/consistent-type-definitions',
    severity: 2,
    message: 'Use an `interface` instead of a `type`.',
    line: 874,
    column: 6,
    nodeType: 'Identifier',
    messageId: 'interfaceOverType',
    endLine: 874,
    endColumn: 16,
    fix: { range: [39_012, 39_050], text: 'interface GreetProps {\n  age?: number;\n}' },
  },
  {
    ruleId: '@typescript-eslint/member-delimiter-style',
    severity: 2,
    message: 'Unexpected separator (;).',
    line: 875,
    column: 16,
    nodeType: 'Punctuator',
    messageId: 'unexpectedSemi',
    endLine: 875,
    endColumn: 16,
    fix: { range: [39_046, 39_047], text: '' },
  },
  {
    ruleId: '@typescript-eslint/no-unused-vars',
    severity: 2,
    message: "'age' is assigned a value but never used.",
    line: 880,
    column: 13,
    nodeType: 'Identifier',
    messageId: 'unusedVar',
    endLine: 880,
    endColumn: 16,
  },
  {
    ruleId: 'spaced-comment',
    severity: 2,
    message: "Expected exception block, space or tab after '/*' in comment.",
    line: 881,
    column: 5,
    nodeType: 'Block',
    messageId: 'expectedExceptionAfter',
    endLine: 881,
    endColumn: 12,
    fix: { range: [39_158, 39_158], text: ' ' },
  },
  {
    ruleId: 'spaced-comment',
    severity: 2,
    message: "Expected space or tab before '*/' in comment.",
    line: 881,
    column: 5,
    nodeType: 'Block',
    messageId: 'expectedSpaceBefore',
    endLine: 881,
    endColumn: 12,
    fix: { range: [39_161, 39_161], text: ' ' },
  },
  {
    ruleId: 'prefer-const',
    severity: 2,
    message: "'el' is never reassigned. Use 'const' instead.",
    line: 885,
    column: 5,
    nodeType: 'Identifier',
    messageId: 'useConst',
    endLine: 885,
    endColumn: 7,
    fix: { range: [39_171, 39_198], text: 'const el = <Greet age={3} />;' },
  },
  {
    ruleId: '@typescript-eslint/no-unused-vars',
    severity: 2,
    message: "'el' is assigned a value but never used.",
    line: 885,
    column: 5,
    nodeType: 'Identifier',
    messageId: 'unusedVar',
    endLine: 885,
    endColumn: 7,
  },
  {
    ruleId: 'func-style',
    severity: 2,
    message: 'Expected a function declaration.',
    line: 904,
    column: 7,
    nodeType: 'VariableDeclarator',
    messageId: 'declaration',
    endLine: 906,
    endColumn: 2,
  },
  {
    ruleId: '@typescript-eslint/member-delimiter-style',
    severity: 2,
    message: 'Unexpected separator (;).',
    line: 916,
    column: 15,
    nodeType: 'Punctuator',
    messageId: 'unexpectedSemi',
    endLine: 916,
    endColumn: 15,
    fix: { range: [40_566, 40_567], text: '' },
  },
  {
    ruleId: 'spaced-comment',
    severity: 2,
    message: "Expected exception block, space or tab after '/*' in comment.",
    line: 923,
    column: 3,
    nodeType: 'Block',
    messageId: 'expectedExceptionAfter',
    endLine: 923,
    endColumn: 10,
    fix: { range: [40_670, 40_670], text: ' ' },
  },
  {
    ruleId: 'spaced-comment',
    severity: 2,
    message: "Expected space or tab before '*/' in comment.",
    line: 923,
    column: 3,
    nodeType: 'Block',
    messageId: 'expectedSpaceBefore',
    endLine: 923,
    endColumn: 10,
    fix: { range: [40_673, 40_673], text: ' ' },
  },
  {
    ruleId: 'prefer-const',
    severity: 2,
    message: "'el' is never reassigned. Use 'const' instead.",
    line: 927,
    column: 5,
    nodeType: 'Identifier',
    messageId: 'useConst',
    endLine: 927,
    endColumn: 7,
    fix: { range: [40_722, 40_749], text: 'const el = <Greet age={3} />;' },
  },
  {
    ruleId: '@typescript-eslint/no-unused-vars',
    severity: 2,
    message: "'el' is assigned a value but never used.",
    line: 927,
    column: 5,
    nodeType: 'Identifier',
    messageId: 'unusedVar',
    endLine: 927,
    endColumn: 7,
  },
  {
    ruleId: '@typescript-eslint/consistent-type-definitions',
    severity: 2,
    message: 'Use an `interface` instead of a `type`.',
    line: 939,
    column: 6,
    nodeType: 'Identifier',
    messageId: 'interfaceOverType',
    endLine: 939,
    endColumn: 16,
    fix: { range: [41_547, 41_584], text: 'interface GreetProps {\n  age: number;\n}' },
  },
  {
    ruleId: '@typescript-eslint/member-delimiter-style',
    severity: 2,
    message: 'Unexpected separator (;).',
    line: 940,
    column: 15,
    nodeType: 'Punctuator',
    messageId: 'unexpectedSemi',
    endLine: 940,
    endColumn: 15,
    fix: { range: [41_580, 41_581], text: '' },
  },
  {
    ruleId: '@typescript-eslint/member-delimiter-style',
    severity: 2,
    message: 'Unexpected separator (;).',
    line: 968,
    column: 16,
    nodeType: 'Punctuator',
    messageId: 'unexpectedSemi',
    endLine: 968,
    endColumn: 16,
    fix: { range: [42_229, 42_230], text: '' },
  },
  {
    ruleId: 'func-style',
    severity: 2,
    message: 'Expected a function declaration.',
    line: 973,
    column: 7,
    nodeType: 'VariableDeclarator',
    messageId: 'declaration',
    endLine: 975,
    endColumn: 2,
  },
  {
    ruleId: 'func-style',
    severity: 2,
    message: 'Expected a function declaration.',
    line: 978,
    column: 7,
    nodeType: 'VariableDeclarator',
    messageId: 'declaration',
    endLine: 980,
    endColumn: 2,
  },
  {
    ruleId: '@typescript-eslint/no-unused-vars',
    severity: 2,
    message: "'el' is assigned a value but never used.",
    line: 983,
    column: 7,
    nodeType: 'Identifier',
    messageId: 'unusedVar',
    endLine: 983,
    endColumn: 9,
  },
  {
    ruleId: 'func-style',
    severity: 2,
    message: 'Expected a function declaration.',
    line: 997,
    column: 7,
    nodeType: 'VariableDeclarator',
    messageId: 'declaration',
    endLine: 999,
    endColumn: 2,
  },
  {
    ruleId: '@typescript-eslint/no-unused-vars',
    severity: 2,
    message: "'el' is assigned a value but never used.",
    line: 1002,
    column: 7,
    nodeType: 'Identifier',
    messageId: 'unusedVar',
    endLine: 1002,
    endColumn: 9,
  },
  {
    ruleId: 'quotes',
    severity: 2,
    message: 'Strings must use singlequote.',
    line: 1034,
    column: 10,
    nodeType: 'Literal',
    messageId: 'wrongQuotes',
    endLine: 1034,
    endColumn: 15,
    fix: { range: [44_572, 44_577], text: "'foo'" },
  },
  {
    ruleId: '@typescript-eslint/member-delimiter-style',
    severity: 2,
    message: 'Unexpected separator (;).',
    line: 1043,
    column: 22,
    nodeType: 'Punctuator',
    messageId: 'unexpectedSemi',
    endLine: 1043,
    endColumn: 22,
    fix: { range: [44_890, 44_891], text: '' },
  },
  {
    ruleId: '@typescript-eslint/member-delimiter-style',
    severity: 2,
    message: 'Unexpected separator (;).',
    line: 1044,
    column: 25,
    nodeType: 'Punctuator',
    messageId: 'unexpectedSemi',
    endLine: 1044,
    endColumn: 25,
    fix: { range: [44_915, 44_916], text: '' },
  },
  {
    ruleId: 'quotes',
    severity: 2,
    message: 'Strings must use singlequote.',
    line: 1049,
    column: 16,
    nodeType: 'Literal',
    messageId: 'wrongQuotes',
    endLine: 1049,
    endColumn: 25,
    fix: { range: [45_066, 45_075], text: "'default'" },
  },
  {
    ruleId: '@typescript-eslint/consistent-type-definitions',
    severity: 2,
    message: 'Use an `interface` instead of a `type`.',
    line: 1075,
    column: 6,
    nodeType: 'Identifier',
    messageId: 'interfaceOverType',
    endLine: 1075,
    endColumn: 14,
    fix: {
      range: [45_959, 47_680],
      text: 'interface AppProps {\n  message: string;\n  count: number;\n  disabled: boolean;\n  /** array of a type! */\n  names: string[];\n  /** string literals to specify exact string values, with a union type to join them together */\n  status: "waiting" | "success";\n  /** an object with known properties (but could have more at runtime) */\n  obj: {\n    id: string;\n    title: string;\n  };\n  /** array of objects! (common) */\n  objArr: {\n    id: string;\n    title: string;\n  }[];\n  /** any non-primitive value - can\'t access any properties (NOT COMMON but useful as placeholder) */\n  obj2: object;\n  /** an interface with no required properties - (NOT COMMON, except for things like `React.Component<{}, State>`) */\n  obj3: {};\n  /** a dict object with any number of properties of the same type */\n  dict1: {\n    [key: string]: MyTypeHere;\n  };\n  dict2: Record<string, MyTypeHere>; // equivalent to dict1\n  /** function that doesn\'t take or return anything (VERY COMMON) */\n  onClick: () => void;\n  /** function with named prop (VERY COMMON) */\n  onChange: (id: number) => void;\n  /** function type syntax that takes an event (VERY COMMON) */\n  onChange: (event: React.ChangeEvent<HTMLInputElement>) => void;\n  /** alternative function type syntax that takes an event (VERY COMMON) */\n  onClick(event: React.MouseEvent<HTMLButtonElement>): void;\n  /** any function as long as you don\'t invoke it (not recommended) */\n  onSomething: Function;\n  /** an optional prop (VERY COMMON!) */\n  optional?: OptionalType;\n  /** when passing down the state setter function returned by `useState` to a child component. `number` is an example, swap out with whatever the type of your state */\n  setState: React.Dispatch<React.SetStateAction<number>>;\n}',
    },
  },
  {
    ruleId: '@typescript-eslint/no-unused-vars',
    severity: 2,
    message: "'AppProps' is defined but never used.",
    line: 1075,
    column: 6,
    nodeType: 'Identifier',
    messageId: 'unusedVar',
    endLine: 1075,
    endColumn: 14,
  },
  {
    ruleId: '@typescript-eslint/member-delimiter-style',
    severity: 2,
    message: 'Unexpected separator (;).',
    line: 1076,
    column: 19,
    nodeType: 'Punctuator',
    messageId: 'unexpectedSemi',
    endLine: 1076,
    endColumn: 19,
    fix: { range: [45_994, 45_995], text: '' },
  },
  {
    ruleId: '@typescript-eslint/member-delimiter-style',
    severity: 2,
    message: 'Unexpected separator (;).',
    line: 1077,
    column: 17,
    nodeType: 'Punctuator',
    messageId: 'unexpectedSemi',
    endLine: 1077,
    endColumn: 17,
    fix: { range: [46_011, 46_012], text: '' },
  },
  {
    ruleId: '@typescript-eslint/member-delimiter-style',
    severity: 2,
    message: 'Unexpected separator (;).',
    line: 1078,
    column: 21,
    nodeType: 'Punctuator',
    messageId: 'unexpectedSemi',
    endLine: 1078,
    endColumn: 21,
    fix: { range: [46_032, 46_033], text: '' },
  },
  {
    ruleId: '@typescript-eslint/member-delimiter-style',
    severity: 2,
    message: 'Unexpected separator (;).',
    line: 1080,
    column: 19,
    nodeType: 'Punctuator',
    messageId: 'unexpectedSemi',
    endLine: 1080,
    endColumn: 19,
    fix: { range: [46_077, 46_078], text: '' },
  },
  {
    ruleId: 'quotes',
    severity: 2,
    message: 'Strings must use singlequote.',
    line: 1082,
    column: 11,
    nodeType: 'Literal',
    messageId: 'wrongQuotes',
    endLine: 1082,
    endColumn: 20,
    fix: { range: [46_186, 46_195], text: "'waiting'" },
  },
  {
    ruleId: 'quotes',
    severity: 2,
    message: 'Strings must use singlequote.',
    line: 1082,
    column: 23,
    nodeType: 'Literal',
    messageId: 'wrongQuotes',
    endLine: 1082,
    endColumn: 32,
    fix: { range: [46_198, 46_207], text: "'success'" },
  },
  {
    ruleId: '@typescript-eslint/member-delimiter-style',
    severity: 2,
    message: 'Unexpected separator (;).',
    line: 1082,
    column: 33,
    nodeType: 'Punctuator',
    messageId: 'unexpectedSemi',
    endLine: 1082,
    endColumn: 33,
    fix: { range: [46_207, 46_208], text: '' },
  },
  {
    ruleId: '@typescript-eslint/member-delimiter-style',
    severity: 2,
    message: 'Unexpected separator (;).',
    line: 1085,
    column: 16,
    nodeType: 'Punctuator',
    messageId: 'unexpectedSemi',
    endLine: 1085,
    endColumn: 16,
    fix: { range: [46_306, 46_307], text: '' },
  },
  {
    ruleId: '@typescript-eslint/member-delimiter-style',
    severity: 2,
    message: 'Unexpected separator (;).',
    line: 1086,
    column: 19,
    nodeType: 'Punctuator',
    messageId: 'unexpectedSemi',
    endLine: 1086,
    endColumn: 19,
    fix: { range: [46_325, 46_326], text: '' },
  },
  {
    ruleId: '@typescript-eslint/member-delimiter-style',
    severity: 2,
    message: 'Unexpected separator (;).',
    line: 1087,
    column: 5,
    nodeType: 'Punctuator',
    messageId: 'unexpectedSemi',
    endLine: 1087,
    endColumn: 5,
    fix: { range: [46_330, 46_331], text: '' },
  },
  {
    ruleId: '@typescript-eslint/array-type',
    severity: 2,
    message: "Array type using 'T[]' is forbidden for non-simple types. Use 'Array<T>' instead.",
    line: 1089,
    column: 11,
    nodeType: 'TSArrayType',
    messageId: 'errorStringGenericSimple',
    endLine: 1092,
    endColumn: 6,
    fix: { range: [46_378, 46_420], text: 'Array<{\n    id: string;\n    title: string;\n  }>' },
  },
  {
    ruleId: '@typescript-eslint/member-delimiter-style',
    severity: 2,
    message: 'Unexpected separator (;).',
    line: 1090,
    column: 16,
    nodeType: 'Punctuator',
    messageId: 'unexpectedSemi',
    endLine: 1090,
    endColumn: 16,
    fix: { range: [46_394, 46_395], text: '' },
  },
  {
    ruleId: '@typescript-eslint/member-delimiter-style',
    severity: 2,
    message: 'Unexpected separator (;).',
    line: 1091,
    column: 19,
    nodeType: 'Punctuator',
    messageId: 'unexpectedSemi',
    endLine: 1091,
    endColumn: 19,
    fix: { range: [46_413, 46_414], text: '' },
  },
  {
    ruleId: '@typescript-eslint/member-delimiter-style',
    severity: 2,
    message: 'Unexpected separator (;).',
    line: 1092,
    column: 7,
    nodeType: 'Punctuator',
    messageId: 'unexpectedSemi',
    endLine: 1092,
    endColumn: 7,
    fix: { range: [46_420, 46_421], text: '' },
  },
  {
    ruleId: '@typescript-eslint/member-delimiter-style',
    severity: 2,
    message: 'Unexpected separator (;).',
    line: 1094,
    column: 16,
    nodeType: 'Punctuator',
    messageId: 'unexpectedSemi',
    endLine: 1094,
    endColumn: 16,
    fix: { range: [46_538, 46_539], text: '' },
  },
  {
    ruleId: '@typescript-eslint/ban-types',
    severity: 2,
    message:
      'Don\'t use `{}` as a type. `{}` actually means "any non-nullish value".\n- If you want a type meaning "any object", you probably want `Record<string, unknown>` instead.\n- If you want a type meaning "any value", you probably want `unknown` instead.',
    line: 1096,
    column: 9,
    nodeType: 'TSTypeLiteral',
    messageId: 'bannedTypeMessage',
    endLine: 1096,
    endColumn: 11,
  },
  {
    ruleId: '@typescript-eslint/member-delimiter-style',
    severity: 2,
    message: 'Unexpected separator (;).',
    line: 1096,
    column: 12,
    nodeType: 'Punctuator',
    messageId: 'unexpectedSemi',
    endLine: 1096,
    endColumn: 12,
    fix: { range: [46_668, 46_669], text: '' },
  },
  {
    ruleId: '@typescript-eslint/consistent-indexed-object-style',
    severity: 2,
    message: 'A record is preferred over an index signature.',
    line: 1098,
    column: 10,
    nodeType: 'TSTypeLiteral',
    messageId: 'preferRecord',
    endLine: 1100,
    endColumn: 4,
    fix: { range: [46_749, 46_785], text: 'Record<string, MyTypeHere>' },
  },
  {
    ruleId: '@typescript-eslint/member-delimiter-style',
    severity: 2,
    message: 'Unexpected separator (;).',
    line: 1099,
    column: 31,
    nodeType: 'Punctuator',
    messageId: 'unexpectedSemi',
    endLine: 1099,
    endColumn: 31,
    fix: { range: [46_780, 46_781], text: '' },
  },
  {
    ruleId: '@typescript-eslint/member-delimiter-style',
    severity: 2,
    message: 'Unexpected separator (;).',
    line: 1100,
    column: 5,
    nodeType: 'Punctuator',
    messageId: 'unexpectedSemi',
    endLine: 1100,
    endColumn: 5,
    fix: { range: [46_785, 46_786], text: '' },
  },
  {
    ruleId: '@typescript-eslint/member-delimiter-style',
    severity: 2,
    message: 'Unexpected separator (;).',
    line: 1101,
    column: 37,
    nodeType: 'Punctuator',
    messageId: 'unexpectedSemi',
    endLine: 1101,
    endColumn: 37,
    fix: { range: [46_822, 46_823], text: '' },
  },
  {
    ruleId: '@typescript-eslint/member-delimiter-style',
    severity: 2,
    message: 'Unexpected separator (;).',
    line: 1103,
    column: 23,
    nodeType: 'Punctuator',
    messageId: 'unexpectedSemi',
    endLine: 1103,
    endColumn: 23,
    fix: { range: [46_937, 46_938], text: '' },
  },
  {
    ruleId: '@typescript-eslint/member-delimiter-style',
    severity: 2,
    message: 'Unexpected separator (;).',
    line: 1105,
    column: 34,
    nodeType: 'Punctuator',
    messageId: 'unexpectedSemi',
    endLine: 1105,
    endColumn: 34,
    fix: { range: [47_019, 47_020], text: '' },
  },
  {
    ruleId: '@typescript-eslint/member-delimiter-style',
    severity: 2,
    message: 'Unexpected separator (;).',
    line: 1107,
    column: 66,
    nodeType: 'Punctuator',
    messageId: 'unexpectedSemi',
    endLine: 1107,
    endColumn: 66,
    fix: { range: [47_149, 47_150], text: '' },
  },
  {
    ruleId: '@typescript-eslint/method-signature-style',
    severity: 2,
    message: 'Shorthand method signature is forbidden. Use a function property instead.',
    line: 1109,
    column: 3,
    nodeType: 'TSMethodSignature',
    messageId: 'errorMethod',
    endLine: 1109,
    endColumn: 61,
    fix: { range: [47_229, 47_287], text: 'onClick: (event: React.MouseEvent<HTMLButtonElement>) => void;' },
  },
  {
    ruleId: '@typescript-eslint/member-delimiter-style',
    severity: 2,
    message: 'Unexpected separator (;).',
    line: 1109,
    column: 61,
    nodeType: 'Punctuator',
    messageId: 'unexpectedSemi',
    endLine: 1109,
    endColumn: 61,
    fix: { range: [47_286, 47_287], text: '' },
  },
  {
    ruleId: '@typescript-eslint/member-ordering',
    severity: 2,
    message: 'Member onSomething should be declared before all method definitions.',
    line: 1111,
    column: 3,
    nodeType: 'TSPropertySignature',
    messageId: 'incorrectGroupOrder',
    endLine: 1111,
    endColumn: 25,
  },
  {
    ruleId: '@typescript-eslint/ban-types',
    severity: 2,
    message:
      "Don't use `Function` as a type. The `Function` type accepts any function-like value.\nIt provides no type safety when calling the function, which can be a common source of bugs.\nIt also accepts things like class declarations, which will throw at runtime as they will not be called with `new`.\nIf you are expecting the function to accept certain arguments, you should explicitly define the function shape.",
    line: 1111,
    column: 16,
    nodeType: 'Identifier',
    messageId: 'bannedTypeMessage',
    endLine: 1111,
    endColumn: 24,
  },
  {
    ruleId: '@typescript-eslint/member-delimiter-style',
    severity: 2,
    message: 'Unexpected separator (;).',
    line: 1111,
    column: 25,
    nodeType: 'Punctuator',
    messageId: 'unexpectedSemi',
    endLine: 1111,
    endColumn: 25,
    fix: { range: [47_382, 47_383], text: '' },
  },
  {
    ruleId: '@typescript-eslint/member-ordering',
    severity: 2,
    message: 'Member optional should be declared before all method definitions.',
    line: 1113,
    column: 3,
    nodeType: 'TSPropertySignature',
    messageId: 'incorrectGroupOrder',
    endLine: 1113,
    endColumn: 27,
  },
  {
    ruleId: '@typescript-eslint/member-delimiter-style',
    severity: 2,
    message: 'Unexpected separator (;).',
    line: 1113,
    column: 27,
    nodeType: 'Punctuator',
    messageId: 'unexpectedSemi',
    endLine: 1113,
    endColumn: 27,
    fix: { range: [47_450, 47_451], text: '' },
  },
  {
    ruleId: '@typescript-eslint/member-ordering',
    severity: 2,
    message: 'Member setState should be declared before all method definitions.',
    line: 1115,
    column: 3,
    nodeType: 'TSPropertySignature',
    messageId: 'incorrectGroupOrder',
    endLine: 1115,
    endColumn: 58,
  },
  {
    ruleId: '@typescript-eslint/member-delimiter-style',
    severity: 2,
    message: 'Unexpected separator (;).',
    line: 1115,
    column: 58,
    nodeType: 'Punctuator',
    messageId: 'unexpectedSemi',
    endLine: 1115,
    endColumn: 58,
    fix: { range: [47_676, 47_677], text: '' },
  },
  {
    ruleId: '@typescript-eslint/no-empty-interface',
    severity: 2,
    message: 'An empty interface is equivalent to `{}`.',
    line: 1130,
    column: 11,
    nodeType: 'Identifier',
    messageId: 'noEmpty',
    endLine: 1130,
    endColumn: 29,
  },
  {
    ruleId: 'quotes',
    severity: 2,
    message: 'Strings must use singlequote.',
    line: 1136,
    column: 9,
    nodeType: 'Literal',
    messageId: 'wrongQuotes',
    endLine: 1136,
    endColumn: 14,
    fix: { range: [48_645, 48_650], text: "'foo'" },
  },
  {
    ruleId: 'quotes',
    severity: 2,
    message: 'Strings must use singlequote.',
    line: 1137,
    column: 21,
    nodeType: 'Literal',
    messageId: 'wrongQuotes',
    endLine: 1137,
    endColumn: 26,
    fix: { range: [48_672, 48_677], text: "'foo'" },
  },
  {
    ruleId: 'quotes',
    severity: 2,
    message: 'Strings must use singlequote.',
    line: 1139,
    column: 16,
    nodeType: 'Literal',
    messageId: 'wrongQuotes',
    endLine: 1139,
    endColumn: 21,
    fix: { range: [48_707, 48_712], text: "'bar'" },
  },
  {
    ruleId: '@typescript-eslint/no-unused-vars',
    severity: 2,
    message: "'value' is assigned a value but never used.",
    line: 1143,
    column: 1,
    nodeType: 'Identifier',
    messageId: 'unusedVar',
    endLine: 1143,
    endColumn: 6,
  },
  {
    ruleId: '@typescript-eslint/member-delimiter-style',
    severity: 2,
    message: 'Unexpected separator (;).',
    line: 1152,
    column: 30,
    nodeType: 'Punctuator',
    messageId: 'unexpectedSemi',
    endLine: 1152,
    endColumn: 30,
    fix: { range: [48_954, 48_955], text: '' },
  },
  {
    ruleId: '@typescript-eslint/member-delimiter-style',
    severity: 2,
    message: 'Unexpected separator (;).',
    line: 1153,
    column: 38,
    nodeType: 'Punctuator',
    messageId: 'unexpectedSemi',
    endLine: 1153,
    endColumn: 38,
    fix: { range: [49_037, 49_038], text: '' },
  },
  {
    ruleId: '@typescript-eslint/member-delimiter-style',
    severity: 2,
    message: 'Unexpected separator (;).',
    line: 1154,
    column: 31,
    nodeType: 'Punctuator',
    messageId: 'unexpectedSemi',
    endLine: 1154,
    endColumn: 31,
    fix: { range: [49_094, 49_095], text: '' },
  },
  {
    ruleId: '@typescript-eslint/member-delimiter-style',
    severity: 2,
    message: 'Unexpected separator (;).',
    line: 1155,
    column: 55,
    nodeType: 'Punctuator',
    messageId: 'unexpectedSemi',
    endLine: 1155,
    endColumn: 55,
    fix: { range: [49_180, 49_181], text: '' },
  },
  {
    ruleId: 'quotes',
    severity: 2,
    message: 'Strings must use singlequote.',
    line: 1157,
    column: 49,
    nodeType: 'Literal',
    messageId: 'wrongQuotes',
    endLine: 1157,
    endColumn: 57,
    fix: { range: [49_414, 49_422], text: "'button'" },
  },
  {
    ruleId: '@typescript-eslint/member-delimiter-style',
    severity: 2,
    message: 'Unexpected separator (;).',
    line: 1157,
    column: 59,
    nodeType: 'Punctuator',
    messageId: 'unexpectedSemi',
    endLine: 1157,
    endColumn: 59,
    fix: { range: [49_423, 49_424], text: '' },
  },
  {
    ruleId: '@typescript-eslint/member-delimiter-style',
    severity: 2,
    message: 'Unexpected separator (;).',
    line: 1158,
    column: 71,
    nodeType: 'Punctuator',
    messageId: 'unexpectedSemi',
    endLine: 1158,
    endColumn: 71,
    fix: { range: [49_584, 49_585], text: '' },
  },
  {
    ruleId: '@typescript-eslint/consistent-type-definitions',
    severity: 2,
    message: 'Use an `interface` instead of a `type`.',
    line: 1168,
    column: 6,
    nodeType: 'Identifier',
    messageId: 'interfaceOverType',
    endLine: 1168,
    endColumn: 11,
    fix: { range: [49_935, 49_982], text: 'interface Props {\n  children?: React.ReactNode;\n}' },
  },
  {
    ruleId: '@typescript-eslint/member-delimiter-style',
    severity: 2,
    message: 'Unexpected separator (;).',
    line: 1169,
    column: 30,
    nodeType: 'Punctuator',
    messageId: 'unexpectedSemi',
    endLine: 1169,
    endColumn: 30,
    fix: { range: [49_978, 49_979], text: '' },
  },
  {
    ruleId: '@typescript-eslint/no-unused-vars',
    severity: 2,
    message: "'App' is defined but never used.",
    line: 1175,
    column: 10,
    nodeType: 'Identifier',
    messageId: 'unusedVar',
    endLine: 1175,
    endColumn: 13,
  },
  {
    ruleId: '@typescript-eslint/no-unused-vars',
    severity: 2,
    message: "'Comp' is defined but never used.",
    line: 1265,
    column: 7,
    nodeType: 'Identifier',
    messageId: 'unusedVar',
    endLine: 1265,
    endColumn: 11,
  },
  {
    ruleId: '@typescript-eslint/no-unused-vars',
    severity: 2,
    message: "'Comp' is defined but never used.",
    line: 1278,
    column: 7,
    nodeType: 'Identifier',
    messageId: 'unusedVar',
    endLine: 1278,
    endColumn: 11,
  },
  {
    ruleId: 'quotes',
    severity: 2,
    message: 'Strings must use singlequote.',
    line: 1280,
    column: 26,
    nodeType: 'Literal',
    messageId: 'wrongQuotes',
    endLine: 1280,
    endColumn: 52,
    fix: { range: [55_301, 55_327], text: "'getDerivedStateFromProps'" },
  },
  {
    ruleId: '@typescript-eslint/no-empty-function',
    severity: 2,
    message: "Unexpected empty static method 'getDerivedStateFromProps'.",
    line: 1282,
    column: 49,
    nodeType: 'FunctionExpression',
    messageId: 'unexpected',
    endLine: 1282,
    endColumn: 51,
  },
  {
    ruleId: '@typescript-eslint/member-delimiter-style',
    severity: 2,
    message: 'Unexpected separator (;).',
    line: 1291,
    column: 22,
    nodeType: 'Punctuator',
    messageId: 'unexpectedSemi',
    endLine: 1291,
    endColumn: 22,
    fix: { range: [55_533, 55_534], text: '' },
  },
  {
    ruleId: '@typescript-eslint/member-delimiter-style',
    severity: 2,
    message: 'Unexpected separator (;).',
    line: 1294,
    column: 27,
    nodeType: 'Punctuator',
    messageId: 'unexpectedSemi',
    endLine: 1294,
    endColumn: 27,
    fix: { range: [55_587, 55_588], text: '' },
  },
  {
    ruleId: '@typescript-eslint/no-unused-vars',
    severity: 2,
    message: "'Comp' is defined but never used.",
    line: 1303,
    column: 7,
    nodeType: 'Identifier',
    messageId: 'unusedVar',
    endLine: 1303,
    endColumn: 11,
  },
  {
    ruleId: 'quotes',
    severity: 2,
    message: 'Strings must use singlequote.',
    line: 1307,
    column: 24,
    nodeType: 'Literal',
    messageId: 'wrongQuotes',
    endLine: 1307,
    endColumn: 29,
    fix: { range: [55_955, 55_960], text: "'123'" },
  },
  {
    ruleId: '@typescript-eslint/lines-between-class-members',
    severity: 2,
    message: 'Expected blank line between class members.',
    line: 1311,
    column: 3,
    nodeType: 'MethodDefinition',
    messageId: 'always',
    endLine: 1314,
    endColumn: 4,
    fix: { range: [56_011, 56_011], text: '\n' },
  },
  {
    ruleId: 'curly',
    severity: 2,
    message: "Expected { after 'if' condition.",
    line: 1312,
    column: 49,
    nodeType: 'IfStatement',
    messageId: 'missingCurlyAfterCondition',
    endLine: 1312,
    endColumn: 61,
    fix: { range: [56_124, 56_136], text: '{return null;}' },
  },
  {
    ruleId: '@typescript-eslint/no-unused-vars',
    severity: 2,
    message: "'el' is assigned a value but never used.",
    line: 1329,
    column: 7,
    nodeType: 'Identifier',
    messageId: 'unusedVar',
    endLine: 1329,
    endColumn: 9,
  },
  {
    ruleId: '@typescript-eslint/consistent-type-definitions',
    severity: 2,
    message: 'Use an `interface` instead of a `type`.',
    line: 1341,
    column: 6,
    nodeType: 'Identifier',
    messageId: 'interfaceOverType',
    endLine: 1341,
    endColumn: 11,
    fix: { range: [57_712, 57_745], text: 'interface State {\n  text: string;\n}' },
  },
  {
    ruleId: '@typescript-eslint/member-delimiter-style',
    severity: 2,
    message: 'Unexpected separator (;).',
    line: 1342,
    column: 16,
    nodeType: 'Punctuator',
    messageId: 'unexpectedSemi',
    endLine: 1342,
    endColumn: 16,
    fix: { range: [57_741, 57_742], text: '' },
  },
  {
    ruleId: '@typescript-eslint/no-unused-vars',
    severity: 2,
    message: "'App' is defined but never used.",
    line: 1344,
    column: 7,
    nodeType: 'Identifier',
    messageId: 'unusedVar',
    endLine: 1344,
    endColumn: 10,
  },
  {
    ruleId: 'quotes',
    severity: 2,
    message: 'Strings must use singlequote.',
    line: 1346,
    column: 11,
    nodeType: 'Literal',
    messageId: 'wrongQuotes',
    endLine: 1346,
    endColumn: 13,
    fix: { range: [57_818, 57_820], text: "''" },
  },
  {
    ruleId: '@typescript-eslint/lines-between-class-members',
    severity: 2,
    message: 'Expected blank line between class members.',
    line: 1353,
    column: 3,
    nodeType: 'MethodDefinition',
    messageId: 'always',
    endLine: 1359,
    endColumn: 4,
    fix: { range: [57_983, 57_983], text: '\n' },
  },
  {
    ruleId: 'no-unused-labels',
    severity: 2,
    message: "'onChange:' is defined but never used.",
    line: 1369,
    column: 3,
    nodeType: 'Identifier',
    messageId: 'unused',
    endLine: 1369,
    endColumn: 11,
    fix: { range: [58_897, 58_907], text: '' },
  },
  {
    ruleId: 'no-labels',
    severity: 2,
    message: 'Unexpected labeled statement.',
    line: 1369,
    column: 3,
    nodeType: 'LabeledStatement',
    messageId: 'unexpectedLabel',
    endLine: 1371,
    endColumn: 4,
  },
  {
    ruleId: '@typescript-eslint/member-delimiter-style',
    severity: 2,
    message: 'Unexpected separator (;).',
    line: 1392,
    column: 32,
    nodeType: 'Punctuator',
    messageId: 'unexpectedSemi',
    endLine: 1392,
    endColumn: 32,
    fix: { range: [60_009, 60_010], text: '' },
  },
  {
    ruleId: '@typescript-eslint/member-delimiter-style',
    severity: 2,
    message: 'Unexpected separator (;).',
    line: 1393,
    column: 35,
    nodeType: 'Punctuator',
    messageId: 'unexpectedSemi',
    endLine: 1393,
    endColumn: 35,
    fix: { range: [60_044, 60_045], text: '' },
  },
  {
    ruleId: '@typescript-eslint/no-unused-vars',
    severity: 2,
    message: "'email' is assigned a value but never used.",
    line: 1395,
    column: 11,
    nodeType: 'Identifier',
    messageId: 'unusedVar',
    endLine: 1395,
    endColumn: 16,
  },
  {
    ruleId: '@typescript-eslint/no-unused-vars',
    severity: 2,
    message: "'password' is assigned a value but never used.",
    line: 1396,
    column: 11,
    nodeType: 'Identifier',
    messageId: 'unusedVar',
    endLine: 1396,
    endColumn: 19,
  },
  {
    ruleId: 'import/no-unresolved',
    severity: 2,
    message: "Unable to resolve path to module 'react'.",
    line: 1467,
    column: 31,
    nodeType: 'Literal',
    endLine: 1467,
    endColumn: 38,
  },
  {
    ruleId: 'quotes',
    severity: 2,
    message: 'Strings must use singlequote.',
    line: 1467,
    column: 31,
    nodeType: 'Literal',
    messageId: 'wrongQuotes',
    endLine: 1467,
    endColumn: 38,
    fix: { range: [67_250, 67_257], text: "'react'" },
  },
  {
    ruleId: 'quotes',
    severity: 2,
    message: 'Strings must use singlequote.',
    line: 1469,
    column: 25,
    nodeType: 'Literal',
    messageId: 'wrongQuotes',
    endLine: 1469,
    endColumn: 32,
    fix: { range: [67_284, 67_291], text: "'light'" },
  },
  {
    ruleId: 'quotes',
    severity: 2,
    message: 'Strings must use singlequote.',
    line: 1469,
    column: 35,
    nodeType: 'Literal',
    messageId: 'wrongQuotes',
    endLine: 1469,
    endColumn: 41,
    fix: { range: [67_294, 67_300], text: "'dark'" },
  },
  {
    ruleId: '@typescript-eslint/no-unused-vars',
    severity: 2,
    message: "'ThemeContext' is assigned a value but never used.",
    line: 1471,
    column: 7,
    nodeType: 'Identifier',
    messageId: 'unusedVar',
    endLine: 1471,
    endColumn: 19,
  },
  {
    ruleId: 'quotes',
    severity: 2,
    message: 'Strings must use singlequote.',
    line: 1471,
    column: 54,
    nodeType: 'Literal',
    messageId: 'wrongQuotes',
    endLine: 1471,
    endColumn: 61,
    fix: { range: [67_356, 67_363], text: "'light'" },
  },
  {
    ruleId: 'import/no-unresolved',
    severity: 2,
    message: "Unable to resolve path to module 'react'.",
    line: 1477,
    column: 26,
    nodeType: 'Literal',
    endLine: 1477,
    endColumn: 33,
  },
  {
    ruleId: 'quotes',
    severity: 2,
    message: 'Strings must use singlequote.',
    line: 1477,
    column: 26,
    nodeType: 'Literal',
    messageId: 'wrongQuotes',
    endLine: 1477,
    endColumn: 33,
    fix: { range: [67_471, 67_478], text: "'react'" },
  },
  {
    ruleId: 'func-style',
    severity: 2,
    message: 'Expected a function declaration.',
    line: 1479,
    column: 7,
    nodeType: 'VariableDeclarator',
    messageId: 'declaration',
    endLine: 1487,
    endColumn: 2,
  },
  {
    ruleId: '@typescript-eslint/no-unused-vars',
    severity: 2,
    message: "'App' is assigned a value but never used.",
    line: 1479,
    column: 7,
    nodeType: 'Identifier',
    messageId: 'unusedVar',
    endLine: 1479,
    endColumn: 10,
  },
  {
    ruleId: '@typescript-eslint/no-unused-vars',
    severity: 2,
    message: "'setTheme' is assigned a value but never used.",
    line: 1480,
    column: 17,
    nodeType: 'Identifier',
    messageId: 'unusedVar',
    endLine: 1480,
    endColumn: 25,
  },
  {
    ruleId: 'quotes',
    severity: 2,
    message: 'Strings must use singlequote.',
    line: 1480,
    column: 56,
    nodeType: 'Literal',
    messageId: 'wrongQuotes',
    endLine: 1480,
    endColumn: 63,
    fix: { range: [67_556, 67_563], text: "'light'" },
  },
  {
    ruleId: 'import/no-unresolved',
    severity: 2,
    message: "Unable to resolve path to module 'react'.",
    line: 1493,
    column: 28,
    nodeType: 'Literal',
    endLine: 1493,
    endColumn: 35,
  },
  {
    ruleId: 'quotes',
    severity: 2,
    message: 'Strings must use singlequote.',
    line: 1493,
    column: 28,
    nodeType: 'Literal',
    messageId: 'wrongQuotes',
    endLine: 1493,
    endColumn: 35,
    fix: { range: [67_775, 67_782], text: "'react'" },
  },
  {
    ruleId: 'func-style',
    severity: 2,
    message: 'Expected a function declaration.',
    line: 1495,
    column: 7,
    nodeType: 'VariableDeclarator',
    messageId: 'declaration',
    endLine: 1499,
    endColumn: 2,
  },
  {
    ruleId: '@typescript-eslint/no-unused-vars',
    severity: 2,
    message: "'MyComponent' is assigned a value but never used.",
    line: 1495,
    column: 7,
    nodeType: 'Identifier',
    messageId: 'unusedVar',
    endLine: 1495,
    endColumn: 18,
  },
  {
    ruleId: 'import/no-unresolved',
    severity: 2,
    message: "Unable to resolve path to module 'react'.",
    line: 1507,
    column: 31,
    nodeType: 'Literal',
    endLine: 1507,
    endColumn: 38,
  },
  {
    ruleId: 'quotes',
    severity: 2,
    message: 'Strings must use singlequote.',
    line: 1507,
    column: 31,
    nodeType: 'Literal',
    messageId: 'wrongQuotes',
    endLine: 1507,
    endColumn: 38,
    fix: { range: [68_049, 68_056], text: "'react'" },
  },
  {
    ruleId: '@typescript-eslint/member-delimiter-style',
    severity: 2,
    message: 'Unexpected separator (;).',
    line: 1510,
    column: 20,
    nodeType: 'Punctuator',
    messageId: 'unexpectedSemi',
    endLine: 1510,
    endColumn: 20,
    fix: { range: [68_112, 68_113], text: '' },
  },
  {
    ruleId: '@typescript-eslint/no-unused-vars',
    severity: 2,
    message: "'CurrentUserContext' is assigned a value but never used.",
    line: 1513,
    column: 7,
    nodeType: 'Identifier',
    messageId: 'unusedVar',
    endLine: 1513,
    endColumn: 25,
  },
  {
    ruleId: 'func-style',
    severity: 2,
    message: 'Expected a function declaration.',
    line: 1517,
    column: 7,
    nodeType: 'VariableDeclarator',
    messageId: 'declaration',
    endLine: 1527,
    endColumn: 2,
  },
  {
    ruleId: '@typescript-eslint/no-unused-vars',
    severity: 2,
    message: "'App' is assigned a value but never used.",
    line: 1517,
    column: 7,
    nodeType: 'Identifier',
    messageId: 'unusedVar',
    endLine: 1517,
    endColumn: 10,
  },
  {
    ruleId: '@typescript-eslint/no-unused-vars',
    severity: 2,
    message: "'setCurrentUser' is assigned a value but never used.",
    line: 1518,
    column: 23,
    nodeType: 'Identifier',
    messageId: 'unusedVar',
    endLine: 1518,
    endColumn: 37,
  },
  {
    ruleId: 'quotes',
    severity: 2,
    message: 'Strings must use singlequote.',
    line: 1519,
    column: 15,
    nodeType: 'Literal',
    messageId: 'wrongQuotes',
    endLine: 1519,
    endColumn: 32,
    fix: { range: [68_317, 68_334], text: "'filiptammergard'" },
  },
  {
    ruleId: 'import/no-unresolved',
    severity: 2,
    message: "Unable to resolve path to module 'react'.",
    line: 1533,
    column: 28,
    nodeType: 'Literal',
    endLine: 1533,
    endColumn: 35,
  },
  {
    ruleId: 'quotes',
    severity: 2,
    message: 'Strings must use singlequote.',
    line: 1533,
    column: 28,
    nodeType: 'Literal',
    messageId: 'wrongQuotes',
    endLine: 1533,
    endColumn: 35,
    fix: { range: [68_743, 68_750], text: "'react'" },
  },
  {
    ruleId: 'func-style',
    severity: 2,
    message: 'Expected a function declaration.',
    line: 1535,
    column: 7,
    nodeType: 'VariableDeclarator',
    messageId: 'declaration',
    endLine: 1539,
    endColumn: 2,
  },
  {
    ruleId: '@typescript-eslint/no-unused-vars',
    severity: 2,
    message: "'MyComponent' is assigned a value but never used.",
    line: 1535,
    column: 7,
    nodeType: 'Identifier',
    messageId: 'unusedVar',
    endLine: 1535,
    endColumn: 18,
  },
  {
    ruleId: 'import/no-unresolved',
    severity: 2,
    message: "Unable to resolve path to module 'react'.",
    line: 1545,
    column: 31,
    nodeType: 'Literal',
    endLine: 1545,
    endColumn: 38,
  },
  {
    ruleId: 'quotes',
    severity: 2,
    message: 'Strings must use singlequote.',
    line: 1545,
    column: 31,
    nodeType: 'Literal',
    messageId: 'wrongQuotes',
    endLine: 1545,
    endColumn: 38,
    fix: { range: [69_167, 69_174], text: "'react'" },
  },
  {
    ruleId: '@typescript-eslint/member-delimiter-style',
    severity: 2,
    message: 'Unexpected separator (;).',
    line: 1548,
    column: 20,
    nodeType: 'Punctuator',
    messageId: 'unexpectedSemi',
    endLine: 1548,
    endColumn: 20,
    fix: { range: [69_230, 69_231], text: '' },
  },
  {
    ruleId: 'func-style',
    severity: 2,
    message: 'Expected a function declaration.',
    line: 1553,
    column: 7,
    nodeType: 'VariableDeclarator',
    messageId: 'declaration',
    endLine: 1563,
    endColumn: 2,
  },
  {
    ruleId: '@typescript-eslint/no-unused-vars',
    severity: 2,
    message: "'useCurrentUser' is assigned a value but never used.",
    line: 1553,
    column: 7,
    nodeType: 'Identifier',
    messageId: 'unusedVar',
    endLine: 1553,
    endColumn: 21,
  },
  {
    ruleId: 'quotes',
    severity: 2,
    message: 'Strings must use singlequote.',
    line: 1558,
    column: 7,
    nodeType: 'Literal',
    messageId: 'wrongQuotes',
    endLine: 1558,
    endColumn: 75,
    fix: { range: [69_464, 69_532], text: "'useCurrentUser has to be used within <CurrentUserContext.Provider>'" },
  },
  {
    ruleId: '@typescript-eslint/no-unused-vars',
    severity: 2,
    message: "'useContext' is defined but never used.",
    line: 1569,
    column: 10,
    nodeType: 'Identifier',
    messageId: 'unusedVar',
    endLine: 1569,
    endColumn: 20,
  },
  {
    ruleId: 'import/no-unresolved',
    severity: 2,
    message: "Unable to resolve path to module 'react'.",
    line: 1569,
    column: 28,
    nodeType: 'Literal',
    endLine: 1569,
    endColumn: 35,
  },
  {
    ruleId: 'quotes',
    severity: 2,
    message: 'Strings must use singlequote.',
    line: 1569,
    column: 28,
    nodeType: 'Literal',
    messageId: 'wrongQuotes',
    endLine: 1569,
    endColumn: 35,
    fix: { range: [69_859, 69_866], text: "'react'" },
  },
  {
    ruleId: 'func-style',
    severity: 2,
    message: 'Expected a function declaration.',
    line: 1571,
    column: 7,
    nodeType: 'VariableDeclarator',
    messageId: 'declaration',
    endLine: 1575,
    endColumn: 2,
  },
  {
    ruleId: '@typescript-eslint/no-unused-vars',
    severity: 2,
    message: "'MyComponent' is assigned a value but never used.",
    line: 1571,
    column: 7,
    nodeType: 'Identifier',
    messageId: 'unusedVar',
    endLine: 1571,
    endColumn: 18,
  },
  {
    ruleId: 'import/no-unresolved',
    severity: 2,
    message: "Unable to resolve path to module 'react'.",
    line: 1583,
    column: 28,
    nodeType: 'Literal',
    endLine: 1583,
    endColumn: 35,
  },
  {
    ruleId: 'quotes',
    severity: 2,
    message: 'Strings must use singlequote.',
    line: 1583,
    column: 28,
    nodeType: 'Literal',
    messageId: 'wrongQuotes',
    endLine: 1583,
    endColumn: 35,
    fix: { range: [70_200, 70_207], text: "'react'" },
  },
  {
    ruleId: 'func-style',
    severity: 2,
    message: 'Expected a function declaration.',
    line: 1585,
    column: 7,
    nodeType: 'VariableDeclarator',
    messageId: 'declaration',
    endLine: 1589,
    endColumn: 2,
  },
  {
    ruleId: '@typescript-eslint/no-unused-vars',
    severity: 2,
    message: "'MyComponent' is assigned a value but never used.",
    line: 1585,
    column: 7,
    nodeType: 'Identifier',
    messageId: 'unusedVar',
    endLine: 1585,
    endColumn: 18,
  },
  {
    ruleId: '@typescript-eslint/no-unused-vars',
    severity: 2,
    message: "'CurrentUserContext' is assigned a value but never used.",
    line: 1595,
    column: 7,
    nodeType: 'Identifier',
    messageId: 'unusedVar',
    endLine: 1595,
    endColumn: 25,
  },
  {
    ruleId: '@typescript-eslint/consistent-type-assertions',
    severity: 2,
    message: 'Always prefer const x: T = { ... }.',
    line: 1596,
    column: 3,
    nodeType: 'TSAsExpression',
    messageId: 'unexpectedObjectTypeAssertion',
    endLine: 1596,
    endColumn: 31,
    suggestions: [
      {
        messageId: 'replaceObjectTypeAssertionWithSatisfies',
        data: { cast: 'CurrentUserContextType' },
        fix: { range: [68, 96], text: '{} satisfies CurrentUserContextType' },
        desc: 'Use const x = { ... } satisfies CurrentUserContextType instead.',
      },
    ],
  },
  {
    ruleId: '@typescript-eslint/no-unused-vars',
    severity: 2,
    message: "'CurrentUserContext' is assigned a value but never used.",
    line: 1603,
    column: 7,
    nodeType: 'Identifier',
    messageId: 'unusedVar',
    endLine: 1603,
    endColumn: 25,
  },
  {
    ruleId: 'sort-imports',
    severity: 2,
    message: "Member 'PureComponent' of the import declaration should be sorted alphabetically.",
    line: 1619,
    column: 21,
    nodeType: 'ImportSpecifier',
    messageId: 'sortMembersAlphabetically',
    endLine: 1619,
    endColumn: 34,
    fix: { range: [71_045, 71_069], text: 'PureComponent, createRef' },
  },
  {
    ruleId: 'import/no-unresolved',
    severity: 2,
    message: "Unable to resolve path to module 'react'.",
    line: 1619,
    column: 42,
    nodeType: 'Literal',
    endLine: 1619,
    endColumn: 49,
  },
  {
    ruleId: 'quotes',
    severity: 2,
    message: 'Strings must use singlequote.',
    line: 1619,
    column: 42,
    nodeType: 'Literal',
    messageId: 'wrongQuotes',
    endLine: 1619,
    endColumn: 49,
    fix: { range: [71_077, 71_084], text: "'react'" },
  },
  {
    ruleId: '@typescript-eslint/no-unused-vars',
    severity: 2,
    message: "'CssThemeProvider' is defined but never used.",
    line: 1621,
    column: 7,
    nodeType: 'Identifier',
    messageId: 'unusedVar',
    endLine: 1621,
    endColumn: 23,
  },
  {
    ruleId: '@typescript-eslint/consistent-type-imports',
    severity: 2,
    message: 'Import "ReactNode" is only used as types.',
    line: 1632,
    column: 1,
    nodeType: 'ImportDeclaration',
    messageId: 'aImportIsOnlyTypes',
    endLine: 1632,
    endColumn: 47,
    fix: { range: [71_313, 71_343], text: 'import type { ReactNode } from "react";\nimport { forwardRef' },
  },
  {
    ruleId: 'sort-imports',
    severity: 2,
    message: "Member 'ReactNode' of the import declaration should be sorted alphabetically.",
    line: 1632,
    column: 22,
    nodeType: 'ImportSpecifier',
    messageId: 'sortMembersAlphabetically',
    endLine: 1632,
    endColumn: 31,
    fix: { range: [71_322, 71_343], text: 'ReactNode, forwardRef' },
  },
  {
    ruleId: 'import/no-unresolved',
    severity: 2,
    message: "Unable to resolve path to module 'react'.",
    line: 1632,
    column: 39,
    nodeType: 'Literal',
    endLine: 1632,
    endColumn: 46,
  },
  {
    ruleId: 'quotes',
    severity: 2,
    message: 'Strings must use singlequote.',
    line: 1632,
    column: 39,
    nodeType: 'Literal',
    messageId: 'wrongQuotes',
    endLine: 1632,
    endColumn: 46,
    fix: { range: [71_351, 71_358], text: "'react'" },
  },
  {
    ruleId: '@typescript-eslint/member-delimiter-style',
    severity: 2,
    message: 'Unexpected separator (;).',
    line: 1635,
    column: 24,
    nodeType: 'Punctuator',
    messageId: 'unexpectedSemi',
    endLine: 1635,
    endColumn: 24,
    fix: { range: [71_401, 71_402], text: '' },
  },
  {
    ruleId: 'quotes',
    severity: 2,
    message: 'Strings must use singlequote.',
    line: 1636,
    column: 9,
    nodeType: 'Literal',
    messageId: 'wrongQuotes',
    endLine: 1636,
    endColumn: 17,
    fix: { range: [71_411, 71_419], text: "'submit'" },
  },
  {
    ruleId: 'quotes',
    severity: 2,
    message: 'Strings must use singlequote.',
    line: 1636,
    column: 20,
    nodeType: 'Literal',
    messageId: 'wrongQuotes',
    endLine: 1636,
    endColumn: 28,
    fix: { range: [71_422, 71_430], text: "'button'" },
  },
  {
    ruleId: '@typescript-eslint/member-delimiter-style',
    severity: 2,
    message: 'Unexpected separator (;).',
    line: 1636,
    column: 29,
    nodeType: 'Punctuator',
    messageId: 'unexpectedSemi',
    endLine: 1636,
    endColumn: 29,
    fix: { range: [71_430, 71_431], text: '' },
  },
  {
    ruleId: '@typescript-eslint/consistent-type-imports',
    severity: 2,
    message: 'Imports "ReactNode" and "Ref" are only used as types.',
    line: 1653,
    column: 1,
    nodeType: 'ImportDeclaration',
    messageId: 'someImportsAreOnlyTypes',
    endLine: 1653,
    endColumn: 52,
    fix: { range: [72_002, 72_037], text: 'import type { ReactNode, Ref } from "react";\nimport { forwardRef' },
  },
  {
    ruleId: 'sort-imports',
    severity: 2,
    message: "Member 'ReactNode' of the import declaration should be sorted alphabetically.",
    line: 1653,
    column: 22,
    nodeType: 'ImportSpecifier',
    messageId: 'sortMembersAlphabetically',
    endLine: 1653,
    endColumn: 31,
    fix: { range: [72_011, 72_037], text: 'ReactNode, Ref, forwardRef' },
  },
  {
    ruleId: 'import/no-unresolved',
    severity: 2,
    message: "Unable to resolve path to module 'react'.",
    line: 1653,
    column: 44,
    nodeType: 'Literal',
    endLine: 1653,
    endColumn: 51,
  },
  {
    ruleId: 'quotes',
    severity: 2,
    message: 'Strings must use singlequote.',
    line: 1653,
    column: 44,
    nodeType: 'Literal',
    messageId: 'wrongQuotes',
    endLine: 1653,
    endColumn: 51,
    fix: { range: [72_045, 72_052], text: "'react'" },
  },
  {
    ruleId: '@typescript-eslint/member-delimiter-style',
    severity: 2,
    message: 'Unexpected separator (;).',
    line: 1656,
    column: 24,
    nodeType: 'Punctuator',
    messageId: 'unexpectedSemi',
    endLine: 1656,
    endColumn: 24,
    fix: { range: [72_095, 72_096], text: '' },
  },
  {
    ruleId: 'quotes',
    severity: 2,
    message: 'Strings must use singlequote.',
    line: 1657,
    column: 9,
    nodeType: 'Literal',
    messageId: 'wrongQuotes',
    endLine: 1657,
    endColumn: 17,
    fix: { range: [72_105, 72_113], text: "'submit'" },
  },
  {
    ruleId: 'quotes',
    severity: 2,
    message: 'Strings must use singlequote.',
    line: 1657,
    column: 20,
    nodeType: 'Literal',
    messageId: 'wrongQuotes',
    endLine: 1657,
    endColumn: 28,
    fix: { range: [72_116, 72_124], text: "'button'" },
  },
  {
    ruleId: '@typescript-eslint/member-delimiter-style',
    severity: 2,
    message: 'Unexpected separator (;).',
    line: 1657,
    column: 29,
    nodeType: 'Punctuator',
    messageId: 'unexpectedSemi',
    endLine: 1657,
    endColumn: 29,
    fix: { range: [72_124, 72_125], text: '' },
  },
  {
    ruleId: null,
    fatal: true,
    severity: 2,
    message: "Parsing error: '>' expected.",
    line: 1691,
    column: 8,
    nodeType: null,
  },
  {
    ruleId: null,
    fatal: true,
    severity: 2,
    message: "Parsing error: '>' expected.",
    line: 1726,
    column: 8,
    nodeType: null,
  },
  {
    ruleId: 'unicorn/prefer-query-selector',
    severity: 2,
    message: 'Prefer `.querySelector()` over `.getElementById()`.',
    line: 1757,
    column: 28,
    nodeType: 'Identifier',
    messageId: 'prefer-query-selector',
    endLine: 1757,
    endColumn: 42,
    fix: { range: [74_481, 74_508], text: 'querySelector("#modal-root"' },
  },
  {
    ruleId: 'quotes',
    severity: 2,
    message: 'Strings must use singlequote.',
    line: 1757,
    column: 43,
    nodeType: 'Literal',
    messageId: 'wrongQuotes',
    endLine: 1757,
    endColumn: 55,
    fix: { range: [74_496, 74_508], text: "'modal-root'" },
  },
  {
    ruleId: 'quotes',
    severity: 2,
    message: 'Strings must use singlequote.',
    line: 1761,
    column: 44,
    nodeType: 'Literal',
    messageId: 'wrongQuotes',
    endLine: 1761,
    endColumn: 49,
    fix: { range: [74_709, 74_714], text: "'div'" },
  },
  {
    ruleId: 'unicorn/prefer-dom-node-append',
    severity: 2,
    message: 'Prefer `Node#append()` over `Node#appendChild()`.',
    line: 1764,
    column: 5,
    nodeType: 'CallExpression',
    messageId: 'prefer-dom-node-append',
    endLine: 1764,
    endColumn: 35,
    fix: { range: [74_756, 74_767], text: 'append' },
  },
  {
    ruleId: 'unicorn/prefer-dom-node-remove',
    severity: 2,
    message: 'Prefer `childNode.remove()` over `parentNode.removeChild(childNode)`.',
    line: 1768,
    column: 5,
    nodeType: 'CallExpression',
    messageId: 'error',
    endLine: 1768,
    endColumn: 35,
    fix: { range: [74_814, 74_844], text: 'this.el.remove()' },
  },
  {
    ruleId: '@typescript-eslint/consistent-type-imports',
    severity: 2,
    message: 'Import "ReactNode" is only used as types.',
    line: 1785,
    column: 1,
    nodeType: 'ImportDeclaration',
    messageId: 'aImportIsOnlyTypes',
    endLine: 1785,
    endColumn: 54,
    fix: { range: [75_614, 75_651], text: 'import type { ReactNode } from "react";\nimport { useEffect, useRef' },
  },
  {
    ruleId: 'sort-imports',
    severity: 2,
    message: "Member 'ReactNode' of the import declaration should be sorted alphabetically.",
    line: 1785,
    column: 29,
    nodeType: 'ImportSpecifier',
    messageId: 'sortMembersAlphabetically',
    endLine: 1785,
    endColumn: 38,
    fix: { range: [75_623, 75_651], text: 'ReactNode, useEffect, useRef' },
  },
  {
    ruleId: 'import/no-unresolved',
    severity: 2,
    message: "Unable to resolve path to module 'react'.",
    line: 1785,
    column: 46,
    nodeType: 'Literal',
    endLine: 1785,
    endColumn: 53,
  },
  {
    ruleId: 'quotes',
    severity: 2,
    message: 'Strings must use singlequote.',
    line: 1785,
    column: 46,
    nodeType: 'Literal',
    messageId: 'wrongQuotes',
    endLine: 1785,
    endColumn: 53,
    fix: { range: [75_659, 75_666], text: "'react'" },
  },
  {
    ruleId: 'import/no-unresolved',
    severity: 2,
    message: "Unable to resolve path to module 'react-dom'.",
    line: 1786,
    column: 30,
    nodeType: 'Literal',
    endLine: 1786,
    endColumn: 41,
  },
  {
    ruleId: 'quotes',
    severity: 2,
    message: 'Strings must use singlequote.',
    line: 1786,
    column: 30,
    nodeType: 'Literal',
    messageId: 'wrongQuotes',
    endLine: 1786,
    endColumn: 41,
    fix: { range: [75_697, 75_708], text: "'react-dom'" },
  },
  {
    ruleId: 'quotes',
    severity: 2,
    message: 'Strings must use singlequote.',
    line: 1788,
    column: 42,
    nodeType: 'Literal',
    messageId: 'wrongQuotes',
    endLine: 1788,
    endColumn: 55,
    fix: { range: [75_752, 75_765], text: "'#modal-root'" },
  },
  {
    ruleId: '@typescript-eslint/consistent-type-definitions',
    severity: 2,
    message: 'Use an `interface` instead of a `type`.',
    line: 1790,
    column: 6,
    nodeType: 'Identifier',
    messageId: 'interfaceOverType',
    endLine: 1790,
    endColumn: 16,
    fix: { range: [75_784, 75_829], text: 'interface ModalProps {\n  children: ReactNode;\n}' },
  },
  {
    ruleId: '@typescript-eslint/member-delimiter-style',
    severity: 2,
    message: 'Unexpected separator (;).',
    line: 1791,
    column: 23,
    nodeType: 'Punctuator',
    messageId: 'unexpectedSemi',
    endLine: 1791,
    endColumn: 23,
    fix: { range: [75_825, 75_826], text: '' },
  },
  {
    ruleId: '@typescript-eslint/no-unused-vars',
    severity: 2,
    message: "'Modal' is defined but never used.",
    line: 1794,
    column: 10,
    nodeType: 'Identifier',
    messageId: 'unusedVar',
    endLine: 1794,
    endColumn: 15,
  },
  {
    ruleId: 'curly',
    severity: 2,
    message: "Expected { after 'if' condition.",
    line: 1797,
    column: 23,
    nodeType: 'IfStatement',
    messageId: 'missingCurlyAfterCondition',
    endLine: 1797,
    endColumn: 69,
    fix: { range: [75_993, 76_039], text: '{elRef.current = document.createElement("div");}' },
  },
  {
    ruleId: 'quotes',
    severity: 2,
    message: 'Strings must use singlequote.',
    line: 1797,
    column: 62,
    nodeType: 'Literal',
    messageId: 'wrongQuotes',
    endLine: 1797,
    endColumn: 67,
    fix: { range: [76_032, 76_037], text: "'div'" },
  },
  {
    ruleId: 'unicorn/prefer-dom-node-append',
    severity: 2,
    message: 'Prefer `Node#append()` over `Node#appendChild()`.',
    line: 1801,
    column: 5,
    nodeType: 'CallExpression',
    messageId: 'prefer-dom-node-append',
    endLine: 1801,
    endColumn: 30,
    fix: { range: [76_158, 76_169], text: 'append' },
  },
  {
    ruleId: 'unicorn/prefer-dom-node-remove',
    severity: 2,
    message: 'Prefer `childNode.remove()` over `parentNode.removeChild(childNode)`.',
    line: 1803,
    column: 7,
    nodeType: 'CallExpression',
    messageId: 'error',
    endLine: 1803,
    endColumn: 32,
    fix: { range: [76_200, 76_225], text: 'el.remove()' },
  },
  {
    ruleId: 'import/no-unresolved',
    severity: 2,
    message: "Unable to resolve path to module 'react'.",
    line: 1818,
    column: 26,
    nodeType: 'Literal',
    endLine: 1818,
    endColumn: 33,
  },
  {
    ruleId: 'quotes',
    severity: 2,
    message: 'Strings must use singlequote.',
    line: 1818,
    column: 26,
    nodeType: 'Literal',
    messageId: 'wrongQuotes',
    endLine: 1818,
    endColumn: 33,
    fix: { range: [77_740, 77_747], text: "'react'" },
  },
  {
    ruleId: '@typescript-eslint/no-unused-vars',
    severity: 2,
    message: "'App' is defined but never used.",
    line: 1820,
    column: 10,
    nodeType: 'Identifier',
    messageId: 'unusedVar',
    endLine: 1820,
    endColumn: 13,
  },
  {
    ruleId: 'quotes',
    severity: 2,
    message: 'Strings must use singlequote.',
    line: 1831,
    column: 24,
    nodeType: 'Literal',
    messageId: 'wrongQuotes',
    endLine: 1831,
    endColumn: 30,
    fix: { range: [78_029, 78_035], text: "'grid'" },
  },
  {
    ruleId: 'quotes',
    severity: 2,
    message: 'Strings must use singlequote.',
    line: 1832,
    column: 27,
    nodeType: 'Literal',
    messageId: 'wrongQuotes',
    endLine: 1832,
    endColumn: 35,
    fix: { range: [78_063, 78_071], text: "'center'" },
  },
  {
    ruleId: 'quotes',
    severity: 2,
    message: 'Strings must use singlequote.',
    line: 1833,
    column: 23,
    nodeType: 'Literal',
    messageId: 'wrongQuotes',
    endLine: 1833,
    endColumn: 30,
    fix: { range: [78_095, 78_102], text: "'100vh'" },
  },
  {
    ruleId: 'quotes',
    severity: 2,
    message: 'Strings must use singlequote.',
    line: 1834,
    column: 22,
    nodeType: 'Literal',
    messageId: 'wrongQuotes',
    endLine: 1834,
    endColumn: 29,
    fix: { range: [78_125, 78_132], text: "'100vh'" },
  },
  {
    ruleId: 'quotes',
    severity: 2,
    message: 'Strings must use singlequote.',
    line: 1835,
    column: 27,
    nodeType: 'Literal',
    messageId: 'wrongQuotes',
    endLine: 1835,
    endColumn: 44,
    fix: { range: [78_160, 78_177], text: "'rgba(0,0,0,0.1)'" },
  },
  {
    ruleId: 'quotes',
    severity: 2,
    message: 'Strings must use singlequote.',
    line: 1839,
    column: 26,
    nodeType: 'Literal',
    messageId: 'wrongQuotes',
    endLine: 1839,
    endColumn: 29,
    fix: { range: [78_257, 78_260], text: "' '" },
  },
  {
    ruleId: 'quotes',
    severity: 2,
    message: 'Strings must use singlequote.',
    line: 1841,
    column: 36,
    nodeType: 'Literal',
    messageId: 'wrongQuotes',
    endLine: 1841,
    endColumn: 47,
    fix: { range: [78_317, 78_328], text: "'papyawhip'" },
  },
  {
    ruleId: '@typescript-eslint/consistent-type-imports',
    severity: 2,
    message: 'Imports "ErrorInfo" and "ReactNode" are only used as types.',
    line: 1880,
    column: 1,
    nodeType: 'ImportDeclaration',
    messageId: 'someImportsAreOnlyTypes',
    endLine: 1880,
    endColumn: 64,
    fix: {
      range: [79_378, 79_425],
      text: 'import type { ErrorInfo, ReactNode } from "react";\nimport React, { Component',
    },
  },
  {
    ruleId: 'import/no-unresolved',
    severity: 2,
    message: "Unable to resolve path to module 'react'.",
    line: 1880,
    column: 56,
    nodeType: 'Literal',
    endLine: 1880,
    endColumn: 63,
  },
  {
    ruleId: 'quotes',
    severity: 2,
    message: 'Strings must use singlequote.',
    line: 1880,
    column: 56,
    nodeType: 'Literal',
    messageId: 'wrongQuotes',
    endLine: 1880,
    endColumn: 63,
    fix: { range: [79_433, 79_440], text: "'react'" },
  },
  {
    ruleId: '@typescript-eslint/member-delimiter-style',
    severity: 2,
    message: 'Unexpected separator (;).',
    line: 1883,
    column: 24,
    nodeType: 'Punctuator',
    messageId: 'unexpectedSemi',
    endLine: 1883,
    endColumn: 24,
    fix: { range: [79_483, 79_484], text: '' },
  },
  {
    ruleId: '@typescript-eslint/member-delimiter-style',
    severity: 2,
    message: 'Unexpected separator (;).',
    line: 1887,
    column: 21,
    nodeType: 'Punctuator',
    messageId: 'unexpectedSemi',
    endLine: 1887,
    endColumn: 21,
    fix: { range: [79_525, 79_526], text: '' },
  },
  {
    ruleId: 'quotes',
    severity: 2,
    message: 'Strings must use singlequote.',
    line: 1901,
    column: 19,
    nodeType: 'Literal',
    messageId: 'wrongQuotes',
    endLine: 1901,
    endColumn: 36,
    fix: { range: [79_881, 79_898], text: "'Uncaught error:'" },
  },
  {
    ruleId: 'no-multiple-empty-lines',
    severity: 2,
    message: 'Too many blank lines at the end of file. Max of 0 allowed.',
    line: 1914,
    column: 1,
    nodeType: 'Program',
    messageId: 'blankEndOfFile',
    endLine: 1915,
    endColumn: 1,
    fix: { range: [80_101, 80_102], text: '' },
  },
  {
    ruleId: '@typescript-eslint/no-unused-vars',
    severity: 2,
    message: "'App' is defined but never used.",
    line: 1946,
    column: 7,
    nodeType: 'Identifier',
    messageId: 'unusedVar',
    endLine: 1946,
    endColumn: 10,
  },
  {
    ruleId: '@typescript-eslint/ban-types',
    severity: 2,
    message:
      'Don\'t use `{}` as a type. `{}` actually means "any non-nullish value".\n- If you want a type meaning "any object", you probably want `Record<string, unknown>` instead.\n- If you want a type meaning "any value", you probably want `unknown` instead.',
    line: 1947,
    column: 3,
    nodeType: 'TSTypeLiteral',
    messageId: 'bannedTypeMessage',
    endLine: 1947,
    endColumn: 5,
  },
  {
    ruleId: '@typescript-eslint/member-delimiter-style',
    severity: 2,
    message: 'Unexpected separator (;).',
    line: 1949,
    column: 26,
    nodeType: 'Punctuator',
    messageId: 'unexpectedSemi',
    endLine: 1949,
    endColumn: 26,
    fix: { range: [81_414, 81_415], text: '' },
  },
  {
    ruleId: '@typescript-eslint/lines-between-class-members',
    severity: 2,
    message: 'Expected blank line between class members.',
    line: 1955,
    column: 3,
    nodeType: 'MethodDefinition',
    messageId: 'always',
    endLine: 1957,
    endColumn: 4,
    fix: { range: [81_470, 81_470], text: '\n' },
  },
  {
    ruleId: '@typescript-eslint/lines-between-class-members',
    severity: 2,
    message: 'Expected blank line between class members.',
    line: 1958,
    column: 3,
    nodeType: 'PropertyDefinition',
    messageId: 'always',
    endLine: 1962,
    endColumn: 5,
    fix: { range: [81_563, 81_563], text: '\n' },
  },
  {
    ruleId: '@typescript-eslint/member-delimiter-style',
    severity: 2,
    message: 'Unexpected separator (;).',
    line: 1972,
    column: 16,
    nodeType: 'Punctuator',
    messageId: 'unexpectedSemi',
    endLine: 1972,
    endColumn: 16,
    fix: { range: [82_563, 82_564], text: '' },
  },
  {
    ruleId: '@typescript-eslint/member-delimiter-style',
    severity: 2,
    message: 'Unexpected separator (;).',
    line: 1975,
    column: 17,
    nodeType: 'Punctuator',
    messageId: 'unexpectedSemi',
    endLine: 1975,
    endColumn: 17,
    fix: { range: [82_599, 82_600], text: '' },
  },
  {
    ruleId: '@typescript-eslint/no-unused-vars',
    severity: 2,
    message: "'redirect' is defined but never used.",
    line: 1979,
    column: 10,
    nodeType: 'Identifier',
    messageId: 'unusedVar',
    endLine: 1979,
    endColumn: 18,
  },
  {
    ruleId: 'quotes',
    severity: 2,
    message: 'Strings must use singlequote.',
    line: 1980,
    column: 7,
    nodeType: 'Literal',
    messageId: 'wrongQuotes',
    endLine: 1980,
    endColumn: 13,
    fix: { range: [82_680, 82_686], text: "'role'" },
  },
  {
    ruleId: '@typescript-eslint/no-unused-vars',
    severity: 2,
    message: "'isAdmin' is defined but never used.",
    line: 1989,
    column: 10,
    nodeType: 'Identifier',
    messageId: 'unusedVar',
    endLine: 1989,
    endColumn: 17,
  },
  {
    ruleId: '@typescript-eslint/no-unused-vars',
    severity: 2,
    message: "'MyComponent' is defined but never used.",
    line: 2005,
    column: 7,
    nodeType: 'Identifier',
    messageId: 'unusedVar',
    endLine: 2005,
    endColumn: 18,
  },
  {
    ruleId: '@typescript-eslint/member-delimiter-style',
    severity: 2,
    message: 'Unexpected separator (;).',
    line: 2006,
    column: 20,
    nodeType: 'Punctuator',
    messageId: 'unexpectedSemi',
    endLine: 2006,
    endColumn: 20,
    fix: { range: [84_636, 84_637], text: '' },
  },
  {
    ruleId: 'quotes',
    severity: 2,
    message: 'Strings must use singlequote.',
    line: 2009,
    column: 23,
    nodeType: 'Literal',
    messageId: 'wrongQuotes',
    endLine: 2009,
    endColumn: 32,
    fix: { range: [84_691, 84_700], text: "'default'" },
  },
  {
    ruleId: 'quotes',
    severity: 2,
    message: 'Strings must use singlequote.',
    line: 2026,
    column: 32,
    nodeType: 'Literal',
    messageId: 'wrongQuotes',
    endLine: 2026,
    endColumn: 38,
    fix: { range: [85_352, 85_358], text: "'left'" },
  },
  {
    ruleId: 'quotes',
    severity: 2,
    message: 'Strings must use singlequote.',
    line: 2026,
    column: 41,
    nodeType: 'Literal',
    messageId: 'wrongQuotes',
    endLine: 2026,
    endColumn: 48,
    fix: { range: [85_361, 85_368], text: "'right'" },
  },
  {
    ruleId: 'quotes',
    severity: 2,
    message: 'Strings must use singlequote.',
    line: 2026,
    column: 51,
    nodeType: 'Literal',
    messageId: 'wrongQuotes',
    endLine: 2026,
    endColumn: 56,
    fix: { range: [85_371, 85_376], text: "'top'" },
  },
  {
    ruleId: 'quotes',
    severity: 2,
    message: 'Strings must use singlequote.',
    line: 2026,
    column: 59,
    nodeType: 'Literal',
    messageId: 'wrongQuotes',
    endLine: 2026,
    endColumn: 67,
    fix: { range: [85_379, 85_387], text: "'bottom'" },
  },
  {
    ruleId: 'no-restricted-syntax',
    severity: 2,
    message: "Don't declare enums",
    line: 2032,
    column: 8,
    nodeType: 'TSEnumDeclaration',
    messageId: 'restrictedSyntax',
    endLine: 2036,
    endColumn: 2,
  },
  {
    ruleId: 'quotes',
    severity: 2,
    message: 'Strings must use singlequote.',
    line: 2033,
    column: 13,
    nodeType: 'Literal',
    messageId: 'wrongQuotes',
    endLine: 2033,
    endColumn: 22,
    fix: { range: [85_571, 85_580], text: "'default'" },
  },
  {
    ruleId: 'quotes',
    severity: 2,
    message: 'Strings must use singlequote.',
    line: 2034,
    column: 11,
    nodeType: 'Literal',
    messageId: 'wrongQuotes',
    endLine: 2034,
    endColumn: 18,
    fix: { range: [85_592, 85_599], text: "'small'" },
  },
  {
    ruleId: 'quotes',
    severity: 2,
    message: 'Strings must use singlequote.',
    line: 2035,
    column: 11,
    nodeType: 'Literal',
    messageId: 'wrongQuotes',
    endLine: 2035,
    endColumn: 18,
    fix: { range: [85_611, 85_618], text: "'large'" },
  },
  {
    ruleId: 'func-style',
    severity: 2,
    message: 'Expected a function declaration.',
    line: 2039,
    column: 14,
    nodeType: 'VariableDeclarator',
    messageId: 'declaration',
    endLine: 2041,
    endColumn: 54,
  },
  {
    ruleId: '@typescript-eslint/no-unused-vars',
    severity: 2,
    message: "'MyComponent' is defined but never used.",
    line: 2049,
    column: 7,
    nodeType: 'Identifier',
    messageId: 'unusedVar',
    endLine: 2049,
    endColumn: 18,
  },
  {
    ruleId: '@typescript-eslint/member-delimiter-style',
    severity: 2,
    message: 'Unexpected separator (;).',
    line: 2050,
    column: 19,
    nodeType: 'Punctuator',
    messageId: 'unexpectedSemi',
    endLine: 2050,
    endColumn: 19,
    fix: { range: [86_133, 86_134], text: '' },
  },
  {
    ruleId: 'unicorn/prefer-dom-node-remove',
    severity: 2,
    message: 'Prefer `childNode.remove()` over `parentNode.removeChild(childNode)`.',
    line: 2068,
    column: 1,
    nodeType: 'CallExpression',
    messageId: 'error',
    endLine: 2068,
    endColumn: 41,
    fix: { range: [87_018, 87_058], text: 'element.remove()' },
  },
  {
    ruleId: 'unicorn/prefer-query-selector',
    severity: 2,
    message: 'Prefer `.querySelector()` over `.getElementById()`.',
    line: 2069,
    column: 21,
    nodeType: 'Identifier',
    messageId: 'prefer-query-selector',
    endLine: 2069,
    endColumn: 35,
  },
  {
    ruleId: '@typescript-eslint/no-unused-vars',
    severity: 2,
    message: "'userID' is defined but never used.",
    line: 2070,
    column: 5,
    nodeType: 'Identifier',
    messageId: 'unusedVar',
    endLine: 2070,
    endColumn: 20,
  },
  {
    ruleId: '@typescript-eslint/no-unused-vars',
    severity: 2,
    message: "'ID' is defined but never used.",
    line: 2082,
    column: 6,
    nodeType: 'Identifier',
    messageId: 'unusedVar',
    endLine: 2082,
    endColumn: 8,
  },
  {
    ruleId: '@typescript-eslint/no-unused-vars',
    severity: 2,
    message: "'OrderID' is defined but never used.",
    line: 2088,
    column: 10,
    nodeType: 'Identifier',
    messageId: 'unusedVar',
    endLine: 2088,
    endColumn: 17,
  },
  {
    ruleId: '@typescript-eslint/no-unused-vars',
    severity: 2,
    message: "'UserID' is defined but never used.",
    line: 2091,
    column: 10,
    nodeType: 'Identifier',
    messageId: 'unusedVar',
    endLine: 2091,
    endColumn: 16,
  },
  {
    ruleId: 'quotes',
    severity: 2,
    message: 'Strings must use singlequote.',
    line: 2102,
    column: 22,
    nodeType: 'Literal',
    messageId: 'wrongQuotes',
    endLine: 2102,
    endColumn: 30,
    fix: { range: [88_022, 88_030], text: "'foobar'" },
  },
  {
    ruleId: '@typescript-eslint/member-delimiter-style',
    severity: 2,
    message: 'Unexpected separator (;).',
    line: 2113,
    column: 17,
    nodeType: 'Punctuator',
    messageId: 'unexpectedSemi',
    endLine: 2113,
    endColumn: 17,
    fix: { range: [88_474, 88_475], text: '' },
  },
  {
    ruleId: 'func-style',
    severity: 2,
    message: 'Expected a function declaration.',
    line: 2115,
    column: 14,
    nodeType: 'VariableDeclarator',
    messageId: 'declaration',
    endLine: 2120,
    endColumn: 2,
  },
  {
    ruleId: null,
    fatal: true,
    severity: 2,
    message: "Parsing error: '{' expected.",
    line: 2140,
    column: 0,
    nodeType: null,
  },
  {
    ruleId: '@typescript-eslint/no-unused-vars',
    severity: 2,
    message: "'FunctionType1' is defined but never used.",
    line: 2158,
    column: 6,
    nodeType: 'Identifier',
    messageId: 'unusedVar',
    endLine: 2158,
    endColumn: 19,
  },
  {
    ruleId: '@typescript-eslint/no-unused-vars',
    severity: 2,
    message: "'pickCard' is defined but never used.",
    line: 2164,
    column: 10,
    nodeType: 'Identifier',
    messageId: 'unusedVar',
    endLine: 2164,
    endColumn: 18,
  },
  {
    ruleId: '@typescript-eslint/array-type',
    severity: 2,
    message: "Array type using 'T[]' is forbidden for non-simple types. Use 'Array<T>' instead.",
    line: 2164,
    column: 22,
    nodeType: 'TSArrayType',
    messageId: 'errorStringGenericSimple',
    endLine: 2164,
    endColumn: 54,
    fix: { range: [90_886, 90_918], text: 'Array<{ suit: string; card: number }>' },
  },
  {
    ruleId: '@typescript-eslint/consistent-type-definitions',
    severity: 2,
    message: 'Use an `interface` instead of a `type`.',
    line: 2175,
    column: 6,
    nodeType: 'Identifier',
    messageId: 'interfaceOverType',
    endLine: 2175,
    endColumn: 14,
    fix: {
      range: [91_404, 91_652],
      text: 'interface pickCard {\n  (x: { suit: string; card: number }[]): number;\n  (x: number): { suit: string; card: number };\n  // no need for combined signature in this form\n  // you can also type static properties of functions here eg `pickCard.wasCalled`\n}',
    },
  },
  {
    ruleId: '@typescript-eslint/no-unused-vars',
    severity: 2,
    message: "'pickCard' is defined but never used.",
    line: 2175,
    column: 6,
    nodeType: 'Identifier',
    messageId: 'unusedVar',
    endLine: 2175,
    endColumn: 14,
  },
  {
    ruleId: '@typescript-eslint/array-type',
    severity: 2,
    message: "Array type using 'T[]' is forbidden for non-simple types. Use 'Array<T>' instead.",
    line: 2176,
    column: 7,
    nodeType: 'TSArrayType',
    messageId: 'errorStringGenericSimple',
    endLine: 2176,
    endColumn: 39,
    fix: { range: [91_428, 91_460], text: 'Array<{ suit: string; card: number }>' },
  },
  {
    ruleId: '@typescript-eslint/member-delimiter-style',
    severity: 2,
    message: 'Unexpected separator (;).',
    line: 2176,
    column: 49,
    nodeType: 'Punctuator',
    messageId: 'unexpectedSemi',
    endLine: 2176,
    endColumn: 49,
    fix: { range: [91_469, 91_470], text: '' },
  },
  {
    ruleId: '@typescript-eslint/member-delimiter-style',
    severity: 2,
    message: 'Unexpected separator (;).',
    line: 2177,
    column: 47,
    nodeType: 'Punctuator',
    messageId: 'unexpectedSemi',
    endLine: 2177,
    endColumn: 47,
    fix: { range: [91_516, 91_517], text: '' },
  },
  {
    ruleId: 'func-style',
    severity: 2,
    message: 'Expected a function declaration.',
    line: 2199,
    column: 7,
    nodeType: 'VariableDeclarator',
    messageId: 'declaration',
    endLine: 2203,
    endColumn: 2,
  },
  {
    ruleId: '@typescript-eslint/no-unused-vars',
    severity: 2,
    message: "'someMethod' is assigned a value but never used.",
    line: 2199,
    column: 7,
    nodeType: 'Identifier',
    messageId: 'unusedVar',
    endLine: 2199,
    endColumn: 17,
  },
  {
    ruleId: 'func-style',
    severity: 2,
    message: 'Expected a function declaration.',
    line: 2218,
    column: 7,
    nodeType: 'VariableDeclarator',
    messageId: 'declaration',
    endLine: 2219,
    endColumn: 33,
  },
  {
    ruleId: 'import/newline-after-import',
    severity: 2,
    message: 'Expected 1 empty line after import statement not followed by another import.',
    line: 2239,
    column: 1,
    nodeType: null,
    fix: { range: [93_955, 93_955], text: '\n' },
  },
  {
    ruleId: 'import/no-unresolved',
    severity: 2,
    message: "Unable to resolve path to module 'library'.",
    line: 2239,
    column: 24,
    nodeType: 'Literal',
    endLine: 2239,
    endColumn: 33,
  },
  {
    ruleId: 'quotes',
    severity: 2,
    message: 'Strings must use singlequote.',
    line: 2239,
    column: 24,
    nodeType: 'Literal',
    messageId: 'wrongQuotes',
    endLine: 2239,
    endColumn: 33,
    fix: { range: [93_945, 93_954], text: "'library'" },
  },
  {
    ruleId: 'quotes',
    severity: 2,
    message: 'Strings must use singlequote.',
    line: 2241,
    column: 43,
    nodeType: 'Literal',
    messageId: 'wrongQuotes',
    endLine: 2241,
    endColumn: 52,
    fix: { range: [94_126, 94_135], text: "'onClick'" },
  },
  {
    ruleId: 'func-style',
    severity: 2,
    message: 'Expected a function declaration.',
    line: 2242,
    column: 7,
    nodeType: 'VariableDeclarator',
    messageId: 'declaration',
    endLine: 2244,
    endColumn: 2,
  },
  {
    ruleId: '@typescript-eslint/no-unused-vars',
    severity: 2,
    message: "'AlertButton' is assigned a value but never used.",
    line: 2242,
    column: 7,
    nodeType: 'Identifier',
    messageId: 'unusedVar',
    endLine: 2242,
    endColumn: 18,
  },
  {
    ruleId: 'quotes',
    severity: 2,
    message: 'Strings must use singlequote.',
    line: 2243,
    column: 32,
    nodeType: 'Literal',
    messageId: 'wrongQuotes',
    endLine: 2243,
    endColumn: 39,
    fix: { range: [94_230, 94_237], text: "'hello'" },
  },
  {
    ruleId: '@typescript-eslint/no-unused-vars',
    severity: 2,
    message: "'FooReturn' is defined but never used.",
    line: 2258,
    column: 6,
    nodeType: 'Identifier',
    messageId: 'unusedVar',
    endLine: 2258,
    endColumn: 15,
  },
  {
    ruleId: 'quotes',
    severity: 2,
    message: 'Strings must use singlequote.',
    line: 2278,
    column: 28,
    nodeType: 'Literal',
    messageId: 'wrongQuotes',
    endLine: 2278,
    endColumn: 40,
    fix: { range: [95_375, 95_387], text: "'subInstArr'" },
  },
  {
    ruleId: 'prefer-const',
    severity: 2,
    message: "'baz' is never reassigned. Use 'const' instead.",
    line: 2281,
    column: 5,
    nodeType: 'Identifier',
    messageId: 'useConst',
    endLine: 2281,
    endColumn: 21,
    fix: { range: [95_425, 95_487], text: 'const baz: SubInstType = {\n  c: 5,\n  d: 6, // type checks ok!\n};' },
  },
  {
    ruleId: '@typescript-eslint/no-unused-vars',
    severity: 2,
    message: "'baz' is assigned a value but never used.",
    line: 2281,
    column: 5,
    nodeType: 'Identifier',
    messageId: 'unusedVar',
    endLine: 2281,
    endColumn: 21,
  },
  {
    ruleId: 'spaced-comment',
    severity: 2,
    message: "Expected space or tab after '//' in comment.",
    line: 2286,
    column: 1,
    nodeType: 'Line',
    messageId: 'expectedSpaceAfter',
    endLine: 2286,
    endColumn: 36,
    fix: { range: [95_491, 95_491], text: ' ' },
  },
  {
    ruleId: 'spaced-comment',
    severity: 2,
    message: "Expected space or tab after '//' in comment.",
    line: 2287,
    column: 1,
    nodeType: 'Line',
    messageId: 'expectedSpaceAfter',
    endLine: 2287,
    endColumn: 46,
    fix: { range: [95_527, 95_527], text: ' ' },
  },
  {
    ruleId: 'spaced-comment',
    severity: 2,
    message: "Expected space or tab after '//' in comment.",
    line: 2288,
    column: 1,
    nodeType: 'Line',
    messageId: 'expectedSpaceAfter',
    endLine: 2288,
    endColumn: 72,
    fix: { range: [95_573, 95_573], text: ' ' },
  },
  {
    ruleId: 'quotes',
    severity: 2,
    message: 'Strings must use singlequote.',
    line: 2289,
    column: 44,
    nodeType: 'Literal',
    messageId: 'wrongQuotes',
    endLine: 2289,
    endColumn: 56,
    fix: { range: [95_686, 95_698], text: "'subInstArr'" },
  },
  {
    ruleId: 'prefer-const',
    severity: 2,
    message: "'baz2' is never reassigned. Use 'const' instead.",
    line: 2290,
    column: 5,
    nodeType: 'Identifier',
    messageId: 'useConst',
    endLine: 2290,
    endColumn: 23,
    fix: { range: [95_704, 95_768], text: 'const baz2: SubInstType2 = {\n  c: 5,\n  d: 6, // type checks ok!\n};' },
  },
  {
    ruleId: '@typescript-eslint/no-unused-vars',
    severity: 2,
    message: "'baz2' is assigned a value but never used.",
    line: 2290,
    column: 5,
    nodeType: 'Identifier',
    messageId: 'unusedVar',
    endLine: 2290,
    endColumn: 23,
  },
  {
    ruleId: 'quotes',
    severity: 2,
    message: 'Strings must use singlequote.',
    line: 2326,
    column: 16,
    nodeType: 'Literal',
    messageId: 'wrongQuotes',
    endLine: 2326,
    endColumn: 35,
    fix: { range: [97_322, 97_341], text: "'my-untyped-module'" },
  },
  {
    ruleId: 'func-style',
    severity: 2,
    message: 'Expected a function declaration.',
    line: 2358,
    column: 7,
    nodeType: 'VariableDeclarator',
    messageId: 'declaration',
    endLine: 2363,
    endColumn: 2,
  },
  {
    ruleId: null,
    fatal: true,
    severity: 2,
    message: 'Parsing error: Property or signature expected.',
    line: 2371,
    column: 32,
    nodeType: null,
  },
  {
    ruleId: 'func-style',
    severity: 2,
    message: 'Expected a function declaration.',
    line: 2385,
    column: 7,
    nodeType: 'VariableDeclarator',
    messageId: 'declaration',
    endLine: 2406,
    endColumn: 2,
  },
  {
    ruleId: 'quotes',
    severity: 2,
    message: 'Strings must use singlequote.',
    line: 2393,
    column: 18,
    nodeType: 'Literal',
    messageId: 'wrongQuotes',
    endLine: 2393,
    endColumn: 28,
    fix: { range: [100_139, 100_149], text: "'darkMode'" },
  },
  {
    ruleId: 'quotes',
    severity: 2,
    message: 'Strings must use singlequote.',
    line: 2413,
    column: 16,
    nodeType: 'Literal',
    messageId: 'wrongQuotes',
    endLine: 2413,
    endColumn: 31,
    fix: { range: [100_687, 100_702], text: "'use-dark-mode'" },
  },
  {
    ruleId: '@typescript-eslint/member-delimiter-style',
    severity: 2,
    message: 'Unexpected separator (;).',
    line: 2418,
    column: 28,
    nodeType: 'Punctuator',
    messageId: 'unexpectedSemi',
    endLine: 2418,
    endColumn: 28,
    fix: { range: [100_857, 100_858], text: '' },
  },
  {
    ruleId: '@typescript-eslint/member-delimiter-style',
    severity: 2,
    message: 'Unexpected separator (;).',
    line: 2419,
    column: 29,
    nodeType: 'Punctuator',
    messageId: 'unexpectedSemi',
    endLine: 2419,
    endColumn: 29,
    fix: { range: [100_944, 100_945], text: '' },
  },
  {
    ruleId: '@typescript-eslint/member-delimiter-style',
    severity: 2,
    message: 'Unexpected separator (;).',
    line: 2420,
    column: 27,
    nodeType: 'Punctuator',
    messageId: 'unexpectedSemi',
    endLine: 2420,
    endColumn: 27,
    fix: { range: [101_031, 101_032], text: '' },
  },
  {
    ruleId: '@typescript-eslint/member-delimiter-style',
    severity: 2,
    message: 'Unexpected separator (;).',
    line: 2421,
    column: 40,
    nodeType: 'Punctuator',
    messageId: 'unexpectedSemi',
    endLine: 2421,
    endColumn: 40,
    fix: { range: [101_136, 101_137], text: '' },
  },
  {
    ruleId: '@typescript-eslint/member-delimiter-style',
    severity: 2,
    message: 'Unexpected separator (;).',
    line: 2422,
    column: 25,
    nodeType: 'Punctuator',
    messageId: 'unexpectedSemi',
    endLine: 2422,
    endColumn: 25,
    fix: { range: [101_227, 101_228], text: '' },
  },
  {
    ruleId: '@typescript-eslint/member-delimiter-style',
    severity: 2,
    message: 'Unexpected separator (;).',
    line: 2423,
    column: 42,
    nodeType: 'Punctuator',
    messageId: 'unexpectedSemi',
    endLine: 2423,
    endColumn: 42,
    fix: { range: [101_371, 101_372], text: '' },
  },
  {
    ruleId: '@typescript-eslint/member-delimiter-style',
    severity: 2,
    message: 'Unexpected separator (;).',
    line: 2424,
    column: 21,
    nodeType: 'Punctuator',
    messageId: 'unexpectedSemi',
    endLine: 2424,
    endColumn: 21,
    fix: { range: [101_441, 101_442], text: '' },
  },
  {
    ruleId: '@typescript-eslint/member-delimiter-style',
    severity: 2,
    message: 'Unexpected separator (;).',
    line: 2430,
    column: 29,
    nodeType: 'Punctuator',
    messageId: 'unexpectedSemi',
    endLine: 2430,
    endColumn: 29,
    fix: { range: [101_612, 101_613], text: '' },
  },
  {
    ruleId: '@typescript-eslint/member-delimiter-style',
    severity: 2,
    message: 'Unexpected separator (;).',
    line: 2431,
    column: 24,
    nodeType: 'Punctuator',
    messageId: 'unexpectedSemi',
    endLine: 2431,
    endColumn: 24,
    fix: { range: [101_636, 101_637], text: '' },
  },
  {
    ruleId: '@typescript-eslint/member-delimiter-style',
    severity: 2,
    message: 'Unexpected separator (;).',
    line: 2432,
    column: 25,
    nodeType: 'Punctuator',
    messageId: 'unexpectedSemi',
    endLine: 2432,
    endColumn: 25,
    fix: { range: [101_661, 101_662], text: '' },
  },
  {
    ruleId: '@typescript-eslint/member-delimiter-style',
    severity: 2,
    message: 'Unexpected separator (;).',
    line: 2433,
    column: 24,
    nodeType: 'Punctuator',
    messageId: 'unexpectedSemi',
    endLine: 2433,
    endColumn: 24,
    fix: { range: [101_685, 101_686], text: '' },
  },
  {
    ruleId: null,
    fatal: true,
    severity: 2,
    message: "Parsing error: '}' expected.",
    line: 2465,
    column: 0,
    nodeType: null,
  },
  {
    ruleId: null,
    fatal: true,
    severity: 2,
    message: "Parsing error: JSX element 'div' has no corresponding closing tag.",
    line: 2487,
    column: 3,
    nodeType: null,
  },
  {
    ruleId: 'quotes',
    severity: 2,
    message: 'Strings must use singlequote.',
    line: 2625,
    column: 16,
    nodeType: 'Literal',
    messageId: 'wrongQuotes',
    endLine: 2625,
    endColumn: 27,
    fix: { range: [110_015, 110_026], text: "'plotly.js'" },
  },
  {
    ruleId: '@typescript-eslint/method-signature-style',
    severity: 2,
    message: 'Shorthand method signature is forbidden. Use a function property instead.',
    line: 2627,
    column: 5,
    nodeType: 'TSMethodSignature',
    messageId: 'errorMethod',
    endLine: 2627,
    endColumn: 32,
  },
  {
    ruleId: '@typescript-eslint/member-delimiter-style',
    severity: 2,
    message: 'Unexpected separator (;).',
    line: 2627,
    column: 32,
    nodeType: 'Punctuator',
    messageId: 'unexpectedSemi',
    endLine: 2627,
    endColumn: 32,
    fix: { range: [110_091, 110_092], text: '' },
  },
  {
    ruleId: 'import/first',
    severity: 2,
    message: 'Import in body of module; reorder to top.',
    line: 2632,
    column: 1,
    nodeType: 'ImportDeclaration',
    endLine: 2632,
    endColumn: 47,
    fix: {
      range: [109_983, 110_165],
      text: '// my-typings.ts\n// MyComponent.tsx\nimport { PlotlyHTMLElement } from "plotly.js";\n\ndeclare module "plotly.js" {\n  interface PlotlyHTMLElement {\n    removeAllListeners(): void;\n  }\n}',
    },
  },
  {
    ruleId: '@typescript-eslint/consistent-type-imports',
    severity: 2,
    message: 'All imports in the declaration are only used as types. Use `import type`.',
    line: 2632,
    column: 1,
    nodeType: 'ImportDeclaration',
    messageId: 'typeOverValue',
    endLine: 2632,
    endColumn: 47,
    fix: { range: [110_125, 110_125], text: ' type' },
  },
  {
    ruleId: 'import/no-unresolved',
    severity: 2,
    message: "Unable to resolve path to module 'plotly.js'.",
    line: 2632,
    column: 35,
    nodeType: 'Literal',
    endLine: 2632,
    endColumn: 46,
  },
  {
    ruleId: 'quotes',
    severity: 2,
    message: 'Strings must use singlequote.',
    line: 2632,
    column: 35,
    nodeType: 'Literal',
    messageId: 'wrongQuotes',
    endLine: 2632,
    endColumn: 46,
    fix: { range: [110_153, 110_164], text: "'plotly.js'" },
  },
  {
    ruleId: 'func-style',
    severity: 2,
    message: 'Expected a function declaration.',
    line: 2634,
    column: 7,
    nodeType: 'VariableDeclarator',
    messageId: 'declaration',
    endLine: 2636,
    endColumn: 2,
  },
  {
    ruleId: '@typescript-eslint/no-unused-vars',
    severity: 2,
    message: "'f' is assigned a value but never used.",
    line: 2634,
    column: 7,
    nodeType: 'Identifier',
    messageId: 'unusedVar',
    endLine: 2634,
    endColumn: 8,
  },
  {
    ruleId: 'quotes',
    severity: 2,
    message: 'Strings must use singlequote.',
    line: 2643,
    column: 16,
    nodeType: 'Literal',
    messageId: 'wrongQuotes',
    endLine: 2643,
    endColumn: 27,
    fix: { range: [110_386, 110_397], text: "'plotly.js'" },
  },
  {
    ruleId: '@typescript-eslint/no-unused-vars',
    severity: 2,
    message: "'ToArray' is defined but never used.",
    line: 2652,
    column: 6,
    nodeType: 'Identifier',
    messageId: 'unusedVar',
    endLine: 2652,
    endColumn: 13,
  },
  {
    ruleId: 'quotes',
    severity: 2,
    message: 'Strings must use singlequote.',
    line: 2656,
    column: 15,
    nodeType: 'Literal',
    messageId: 'wrongQuotes',
    endLine: 2656,
    endColumn: 28,
    fix: { range: [110_972, 110_985], text: "'development'" },
  },
  {
    ruleId: 'quotes',
    severity: 2,
    message: 'Strings must use singlequote.',
    line: 2656,
    column: 31,
    nodeType: 'Literal',
    messageId: 'wrongQuotes',
    endLine: 2656,
    endColumn: 43,
    fix: { range: [110_988, 111_000], text: "'production'" },
  },
  {
    ruleId: '@typescript-eslint/member-delimiter-style',
    severity: 2,
    message: 'Unexpected separator (;).',
    line: 2656,
    column: 44,
    nodeType: 'Punctuator',
    messageId: 'unexpectedSemi',
    endLine: 2656,
    endColumn: 44,
    fix: { range: [111_000, 111_001], text: '' },
  },
  {
    ruleId: '@typescript-eslint/member-delimiter-style',
    severity: 2,
    message: 'Unexpected separator (;).',
    line: 2657,
    column: 5,
    nodeType: 'Punctuator',
    messageId: 'unexpectedSemi',
    endLine: 2657,
    endColumn: 5,
    fix: { range: [111_005, 111_006], text: '' },
  },
  {
    ruleId: 'prefer-const',
    severity: 2,
    message: "'process' is never reassigned. Use 'const' instead.",
    line: 2659,
    column: 1,
    nodeType: 'Identifier',
    messageId: 'useConst',
    endLine: 2659,
    endColumn: 8,
  },
  {
    ruleId: '@typescript-eslint/no-unused-vars',
    severity: 2,
    message: "'process' is assigned a value but never used.",
    line: 2659,
    column: 1,
    nodeType: 'Identifier',
    messageId: 'unusedVar',
    endLine: 2659,
    endColumn: 8,
  },
  {
    ruleId: 'quotes',
    severity: 2,
    message: 'Strings must use singlequote.',
    line: 2661,
    column: 15,
    nodeType: 'Literal',
    messageId: 'wrongQuotes',
    endLine: 2661,
    endColumn: 27,
    fix: { range: [111_045, 111_057], text: "'production'" },
  },
  {
    ruleId: '@typescript-eslint/member-delimiter-style',
    severity: 2,
    message: 'Unexpected separator (;).',
    line: 2681,
    column: 33,
    nodeType: 'Punctuator',
    messageId: 'unexpectedSemi',
    endLine: 2681,
    endColumn: 33,
    fix: { range: [111_619, 111_620], text: '' },
  },
  {
    ruleId: 'quotes',
    severity: 2,
    message: 'Strings must use singlequote.',
    line: 2691,
    column: 16,
    nodeType: 'Literal',
    messageId: 'wrongQuotes',
    endLine: 2691,
    endColumn: 23,
    fix: { range: [111_818, 111_825], text: "'*.png'" },
  },
  {
    ruleId: 'import/first',
    severity: 2,
    message: 'Import in body of module; reorder to top.',
    line: 2694,
    column: 1,
    nodeType: 'ImportDeclaration',
    endLine: 2694,
    endColumn: 36,
    fix: {
      range: [111_707, 111_890],
      text: '// declaration.d.ts\n// anywhere in your project, NOT the same name as any of your .ts/tsx files\n// importing in a tsx file\nimport * as logo from "./logo.png";\n\ndeclare module "*.png";',
    },
  },
  {
    ruleId: '@typescript-eslint/no-unused-vars',
    severity: 2,
    message: "'logo' is defined but never used.",
    line: 2694,
    column: 13,
    nodeType: 'Identifier',
    messageId: 'unusedVar',
    endLine: 2694,
    endColumn: 17,
  },
  {
    ruleId: 'import/no-unresolved',
    severity: 2,
    message: "Unable to resolve path to module './logo.png'.",
    line: 2694,
    column: 23,
    nodeType: 'Literal',
    endLine: 2694,
    endColumn: 35,
  },
  {
    ruleId: 'quotes',
    severity: 2,
    message: 'Strings must use singlequote.',
    line: 2694,
    column: 23,
    nodeType: 'Literal',
    messageId: 'wrongQuotes',
    endLine: 2694,
    endColumn: 35,
    fix: { range: [111_877, 111_889], text: "'./logo.png'" },
  },
  {
    ruleId: 'quotes',
    severity: 2,
    message: 'Strings must use singlequote.',
    line: 2759,
    column: 12,
    nodeType: 'Literal',
    messageId: 'wrongQuotes',
    endLine: 2759,
    endColumn: 32,
    fix: { range: [114_595, 114_615], text: "'eslint:recommended'" },
  },
  {
    ruleId: 'quotes',
    severity: 2,
    message: 'Strings must use singlequote.',
    line: 2760,
    column: 11,
    nodeType: 'Literal',
    messageId: 'wrongQuotes',
    endLine: 2760,
    endColumn: 38,
    fix: { range: [114_627, 114_654], text: "'@typescript-eslint/parser'" },
  },
  {
    ruleId: 'quotes',
    severity: 2,
    message: 'Strings must use singlequote.',
    line: 2761,
    column: 13,
    nodeType: 'Literal',
    messageId: 'wrongQuotes',
    endLine: 2761,
    endColumn: 33,
    fix: { range: [114_668, 114_688], text: "'@typescript-eslint'" },
  },
  {
    ruleId: 'quotes',
    severity: 2,
    message: 'Strings must use singlequote.',
    line: 2764,
    column: 17,
    nodeType: 'Literal',
    messageId: 'wrongQuotes',
    endLine: 2764,
    endColumn: 25,
    fix: { range: [114_749, 114_757], text: "'module'" },
  },
  {
    ruleId: 'quotes',
    severity: 2,
    message: 'Strings must use singlequote.',
    line: 2767,
    column: 14,
    nodeType: 'Literal',
    messageId: 'wrongQuotes',
    endLine: 2767,
    endColumn: 21,
    fix: { range: [114_788, 114_795], text: "'error'" },
  },
  {
    ruleId: 'quotes',
    severity: 2,
    message: 'Strings must use singlequote.',
    line: 2768,
    column: 5,
    nodeType: 'Literal',
    messageId: 'wrongQuotes',
    endLine: 2768,
    endColumn: 22,
    fix: { range: [114_805, 114_822], text: "'linebreak-style'" },
  },
  {
    ruleId: 'quotes',
    severity: 2,
    message: 'Strings must use singlequote.',
    line: 2768,
    column: 25,
    nodeType: 'Literal',
    messageId: 'wrongQuotes',
    endLine: 2768,
    endColumn: 32,
    fix: { range: [114_825, 114_832], text: "'error'" },
  },
  {
    ruleId: 'quotes',
    severity: 2,
    message: 'Strings must use singlequote.',
    line: 2768,
    column: 34,
    nodeType: 'Literal',
    messageId: 'wrongQuotes',
    endLine: 2768,
    endColumn: 40,
    fix: { range: [114_834, 114_840], text: "'unix'" },
  },
  {
    ruleId: 'quotes',
    severity: 2,
    message: 'Strings must use singlequote.',
    line: 2769,
    column: 14,
    nodeType: 'Literal',
    messageId: 'wrongQuotes',
    endLine: 2769,
    endColumn: 21,
    fix: { range: [114_856, 114_863], text: "'error'" },
  },
  {
    ruleId: 'quotes',
    severity: 2,
    message: 'Strings must use singlequote.',
    line: 2769,
    column: 23,
    nodeType: 'Literal',
    messageId: 'wrongQuotes',
    endLine: 2769,
    endColumn: 31,
    fix: { range: [114_865, 114_873], text: "'single'" },
  },
  {
    ruleId: 'quotes',
    severity: 2,
    message: 'Strings must use singlequote.',
    line: 2770,
    column: 5,
    nodeType: 'Literal',
    messageId: 'wrongQuotes',
    endLine: 2770,
    endColumn: 17,
    fix: { range: [114_880, 114_892], text: "'no-console'" },
  },
  {
    ruleId: 'quotes',
    severity: 2,
    message: 'Strings must use singlequote.',
    line: 2770,
    column: 19,
    nodeType: 'Literal',
    messageId: 'wrongQuotes',
    endLine: 2770,
    endColumn: 25,
    fix: { range: [114_894, 114_900], text: "'warn'" },
  },
  {
    ruleId: 'quotes',
    severity: 2,
    message: 'Strings must use singlequote.',
    line: 2771,
    column: 5,
    nodeType: 'Literal',
    messageId: 'wrongQuotes',
    endLine: 2771,
    endColumn: 21,
    fix: { range: [114_906, 114_922], text: "'no-unused-vars'" },
  },
  {
    ruleId: 'quotes',
    severity: 2,
    message: 'Strings must use singlequote.',
    line: 2771,
    column: 23,
    nodeType: 'Literal',
    messageId: 'wrongQuotes',
    endLine: 2771,
    endColumn: 28,
    fix: { range: [114_924, 114_929], text: "'off'" },
  },
  {
    ruleId: 'quotes',
    severity: 2,
    message: 'Strings must use singlequote.',
    line: 2772,
    column: 5,
    nodeType: 'Literal',
    messageId: 'wrongQuotes',
    endLine: 2772,
    endColumn: 40,
    fix: { range: [114_935, 114_970], text: "'@typescript-eslint/no-unused-vars'" },
  },
  {
    ruleId: 'quotes',
    severity: 2,
    message: 'Strings must use singlequote.',
    line: 2773,
    column: 7,
    nodeType: 'Literal',
    messageId: 'wrongQuotes',
    endLine: 2773,
    endColumn: 14,
    fix: { range: [114_980, 114_987], text: "'error'" },
  },
  {
    ruleId: 'quotes',
    severity: 2,
    message: 'Strings must use singlequote.',
    line: 2774,
    column: 15,
    nodeType: 'Literal',
    messageId: 'wrongQuotes',
    endLine: 2774,
    endColumn: 20,
    fix: { range: [115_003, 115_008], text: "'all'" },
  },
  {
    ruleId: 'quotes',
    severity: 2,
    message: 'Strings must use singlequote.',
    line: 2774,
    column: 28,
    nodeType: 'Literal',
    messageId: 'wrongQuotes',
    endLine: 2774,
    endColumn: 40,
    fix: { range: [115_016, 115_028], text: "'after-used'" },
  },
  {
    ruleId: 'quotes',
    severity: 2,
    message: 'Strings must use singlequote.',
    line: 2776,
    column: 5,
    nodeType: 'Literal',
    messageId: 'wrongQuotes',
    endLine: 2776,
    endColumn: 55,
    fix: { range: [115_070, 115_120], text: "'@typescript-eslint/explicit-function-return-type'" },
  },
  {
    ruleId: 'quotes',
    severity: 2,
    message: 'Strings must use singlequote.',
    line: 2776,
    column: 57,
    nodeType: 'Literal',
    messageId: 'wrongQuotes',
    endLine: 2776,
    endColumn: 63,
    fix: { range: [115_122, 115_128], text: "'warn'" },
  },
  {
    ruleId: 'quotes',
    severity: 2,
    message: 'Strings must use singlequote.',
    line: 2777,
    column: 5,
    nodeType: 'Literal',
    messageId: 'wrongQuotes',
    endLine: 2777,
    endColumn: 15,
    fix: { range: [115_251, 115_261], text: "'no-empty'" },
  },
  {
    ruleId: 'quotes',
    severity: 2,
    message: 'Strings must use singlequote.',
    line: 2777,
    column: 17,
    nodeType: 'Literal',
    messageId: 'wrongQuotes',
    endLine: 2777,
    endColumn: 23,
    fix: { range: [115_263, 115_269], text: "'warn'" },
  },
]
/* eslint-enable sonarjs/no-duplicate-string,max-lines */
