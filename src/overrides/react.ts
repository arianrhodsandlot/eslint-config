import type { Linter } from 'eslint'

export const reactRules: Linter.RulesRecord = {
  'react/function-component-definition': [
    'error',
    {
      namedComponents: 'function-declaration',
      unnamedComponents: 'function-expression',
    },
  ],
  'react/hook-use-state': ['error', { allowDestructuredState: true }],
  'react/jsx-boolean-value': 'error',
  'react/jsx-no-leaked-render': 'error',
  'react/jsx-no-script-url': 'error',
  'react/jsx-no-useless-fragment': 'error',
  'react/jsx-sort-props': 'error',
  'react/no-arrow-function-lifecycle': 'error',
  'react/no-did-mount-set-state': 'error',
  'react/no-invalid-html-attribute': 'error',
  'react/no-multi-comp': 'error',
  'react/no-redundant-should-component-update': 'error',
  'react/no-this-in-sfc': 'error',
  'react/no-typos': 'error',
  'react/no-unescaped-entities': 'error',
  'react/no-unstable-nested-components': 'error',
  'react/no-unused-class-component-methods': 'error',
  'react/no-unused-state': 'error',
  'react/no-will-update-set-state': 'error',
  'react/self-closing-comp': 'error',
  'react/sort-comp': 'error',
  'react/sort-prop-types': 'error',
  'react/state-in-constructor': 'error',
  'react/style-prop-object': 'error',
  'react/void-dom-elements-no-children': 'error',
}
